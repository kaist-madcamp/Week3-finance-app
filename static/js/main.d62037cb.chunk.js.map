{"version":3,"sources":["styles/styles.ts","components/PageTitle.tsx","routes.ts","lib/defaultClient.ts","lib/constants.ts","components/query/GetAllAccount.tsx","components/query/GetAllCategories.tsx","components/query/IncomeTransaction.tsx","components/query/OutcomeTransaction.tsx","components/calendar/CardSlider.tsx","components/UI/NewModal.tsx","components/anlytics/MonthSelectorWrapper.tsx","components/calendar/SwipeView.tsx","components/query/UpdateOne.tsx","components/query/DeleteOne.tsx","components/calendar/EditModal.tsx","components/query/GetMonthHistory.tsx","components/calendar/CalendarGrid.tsx","lib/helper.ts","providers/PortalProvider.tsx","components/UI/Modal.tsx","components/anlytics/history/HistoryCardContainer.tsx","components/anlytics/history/HistoryColumn.tsx","components/anlytics/history/HistoryRow.tsx","components/anlytics/history/HistoryCategoryContainer.tsx","lib/api/account.ts","lib/api/category.ts","lib/api/transaction.ts","components/anlytics/history/HistoryViewWrapper.tsx","lib/api/history.ts","components/anlytics/chart/CategoryChart.tsx","pages/HistoryView.tsx","components/anlytics/SumIndicatorWrapper.tsx","pages/Calendar.tsx","components/anlytics/chart/DateChart.tsx","pages/Analytics.tsx","components/UI/Backdrop.tsx","components/anlytics/payment/PaymentManagerTitle.tsx","components/anlytics/payment/PaymentManagerHeader.tsx","components/anlytics/payment/PaymentManagerCardWrapper.tsx","components/UI/SendCardSlider.tsx","components/query/Send.tsx","components/UI/TransferModal.tsx","components/UI/ReceiveModal.tsx","pages/Home.tsx","components/auth/AuthLayout.tsx","components/shared.tsx","components/auth/FormBox.tsx","components/auth/Input.tsx","components/auth/Button.tsx","components/auth/Separator.tsx","components/auth/BottomBox.tsx","components/auth/FormError.tsx","lib/api/auth.ts","pages/Login.tsx","pages/SignUp.tsx","pages/NotFound.tsx","hooks/useLogin.tsx","hooks/useDarkmode.tsx","App.tsx","index.tsx"],"names":["commonTheme","accent","lightTheme","opositeColor","bgColor","borderColor","color","errorMsgColor","selectedColor","selectedBgColor","unselectedColor","unselectedBgColor","itemRowColor","itemRowBgColor","linearGradientLeft","linearGradientRight","ModalHslaBgColor","darkTheme","backgroundImage","backgroundAttachment","GlobalStyles","createGlobalStyle","reset","props","theme","PageTitle","title","Helmet","routes","home","signUp","calendar","analytics","source","axios","CancelToken","axiosInstance","create","baseURL","headers","Authorization","localStorage","getItem","timeout","interceptors","request","use","config","url","cancel","window","location","reload","GetAllAccount","setAccountList","setGetAllAccountData","tmpList","data","useQuery","a","Axios","get","response","map","el","push","name","useEffect","GetAllCategories","setIncomeCategoryList","setOutcomeCategoryList","setCategoryList","setGetAllCategoriesData","ok","alert","error","tmpIncome","tmpOutcome","type","IncomeTransaction","accountId","amount","categoryName","label","date","setSendIncome","closeModal","post","content","console","log","OutcomeTransaction","categoryId","setSendOutcome","style","animation","border","Button","styled","button","CardSlider","accountList","account","setAccount","useState","cardIndex","setCardIndex","changeIndex_minus","changeIndex_plus","cardName","includes","enableMouseEvents","index","disabled","Boolean","i","className","onClick","undefined","length","modalBackground","visible","opacity","hidden","background","NewModal","getAllAccountData","incomeSelect","setIncomeSelect","outcomeSelect","setOutcomeSelect","utcDate","Date","getTime","toISOString","slice","setDate","incomeCategoryList","outcomeCategoryList","categoryList","category","setCategory","setLabel","setAmount","setAccountId","sendIncome","sendOutcome","AnimatePresence","exitBeforeEnter","motion","div","variants","initial","animate","value","onChange","e","target","placeholder","test","validateForm","id","list","MonthSelectorWrapper","monthDate","onClicked","monthIndex","Fragment","MonthList","MonthBefore","Year","MonthBtnLeft","year","month","MonthCurrent","MonthBtn","MonthAfter","MonthBtnRight","SwipeView","UpdateOne","clickedData","setSendEdit","setOpenModal","tmpType","put","transactionId","createdAt","DeleteOne","setSendDelete","EditModal","monthData","getAllCategoriesData","setCategoryId","sendEdit","sendDelete","incomeCategory","outcomeCategory","element","idx","GetMonthHistory","setHistory","setMonthData","income","setIncome","outcome","setOutcome","Error","day","hour","min","tmpTitle","allDay","start","end","toLocaleString","moment","locale","localizer","momentLocalizer","now","CalendarGrid","setMonth","openModal","history","clickedEvent","setClickedEvent","height","paddingLeft","paddingRight","paddingTop","paddingBottom","toolbar","events","step","views","defaultDate","onSelectEvent","eventPropGetter","event","backgroundColor","fontWeight","textAlign","showAllEvents","doShowMoreDrillDown","dayStr","dateWithDay","dateStr","dateObj","getDay","getDate","dateExtension","priceToString","price","toString","replace","getPaymentEnKeyName","paymentName","pName","toLowerCase","PortalContext","createContext","PortalProvider","children","portalContainerRef","setPortalContainerRef","Provider","ref","elem","PortalConsumer","Consumer","createPortal","Modal","isClose","onClose","ModalContainer","close","HistoryFormWrapper","stopPropagation","blur","keyframes","up","HistoryCardContainer","pickedCard","allCardData","CardContainer","card","EnKey","Card","size","icon","faCheckCircle","HistoryColumn","React","Children","toArray","Column","DateIndicator","HistoryRow","accountName","Row","HistoryCard","Front","Payment","Content","Back","Amount","isIncome","HistoryCategoryContainer","pickedCategory","pickedType","allCategoryData","cat","CategoryIndicator","selected","getAllAccount","getAllCategories","createTransaction","createTransactionInput","updateTransaction","updateTransactionInput","toUpperCase","deleteTransaction","getPendingTransactionAPI","cancelToken","token","ReceivePendingTransactionAPI","receivePendingTransactionInput","HistoryViewWrapper","historyDataByCreatedAt","selectedSumIndicator","selectedDate","historyFormClicked","setHistoryFormClicked","dateKeystroke","setDateKeystroke","pickedData","setPickedData","prev","useMutation","mutateUpdateAsync","mutateAsync","isUpdating","isLoading","mutateDeleteAsync","isDeleting","mutateCreateAsync","accountData","retry","categoryData","toggleShowModal","defaultHistoryData","DateArray","toLocaleDateString","split","deleteBtnHandler","confirm","submitHandler","preventDefault","foundAccount","find","acc","Container","rows","row","HistoryForm","onSubmit","IconWrapper","CloseIcon","TypePicker","TypeIndicator","DatePicker","YearInput","maxLength","MonthInput","DayInput","CategoryPicker","CardPicker","currentTarget","scrollIntoView","behavior","block","InputWrapper","ContentInput","keystroke","SubmitButtonWrapper","SubmitButton","FloatingBlock","faPlusCircle","Text","form","input","Input","fetchHistoryAPI","fetchHistoryInput","fetchHistoryByCategoryAPI","fetchHistoryByCreatedAtAPI","CategoryChart","historyData","dataForPie","labels","datasets","_","pieBackgroundColor","borderWidth","Notification","totalSum","reduce","PolarCharWrapper","width","options","maintainAspectRatio","toFixed","Bar","SumIndicatorType","span","slide","HistoryView","setSelectedDate","DEFAULT","setSelectedSumIndicator","SumIndicatorWrapper","SumIndicatorClickedHandler","expenditure","totalMoney","setTotalMoney","SumIndicator","MoneyButtonIncome","active","INCOME","MoneyButtonExpenditure","EXPENDITURE","MoneyButton","SumIndicatorContainer","AddBtn","PlusIcon","FontAwesomeIcon","CalendarTab","setIndex","faPlus","DateChart","dailyArray","Array","zeroArr","fill","datas","radius","pointBorderColor","scales","yAxes","ticks","beginAtZero","tooltips","titleFontColor","titleMarginBottom","Analytics","AnalyticsOption","setAnalyticsOption","Wrapper","AnalyticsOptions","AnalyticsOptionBtn","checked","CategorySection","section","Backdrop","BackdropContainer","PaymentManagerTitle","PaymentManagerHeader","PaymentManagerCardWrapper","PaymentManagerCard","SendCardSlider","balanceArr","Send","setSend","receiver","setOpenTransfer","setCardListClicked","accountSubId","Transfer","selectedCardName","setShowSendTransaction","setReceiver","send","balance","setBalance","tmpBalance","PendingTransactionContainer","Title","Message","ReceiveBtn","ReceiveModal","setHasPendingTransaction","getPendingData","onReceive","reply","onDeny","user","Home","darkModeInput","cardListClicked","setSelectedCardName","showSendTransaction","hasPendingTransaction","toggleCardListView","sendTransactionHandler","Navigation","DarkModeBtn","faSun","faMoon","Divider","Line","to","faClock","faCalendar","faChartBar","CardListButton","faCreditCard","friction","gravity","numberOfPieces","recycle","path","exact","Calendar","PaymentManagerCardContainer","nav","AuthLayout","Footer","footer","BaseBox","SFormBox","FormBox","SInput","hasError","forwardRef","SButton","SSeparator","Separator","BottomBox","description","link","SBottomBox","SFormError","FormError","message","createUserAPI","createUserInput","loginUserAPI","loginUserInput","Login","useAuthHookInput","useLocation","reqErrorMessage","setReqErrorMessage","useForm","mode","defaultValues","email","state","password","register","handleSubmit","formState","errors","isValid","onSubmitValid","res","required","minLength","result","ErrorMessage","h1","SignUp","useHistory","NotFound","TOKEN","DARK_MODE","App","isDark","setIsDark","removeItem","setItem","useDarkMode","isDarkTheme","toggleDarkMode","isLoggedIn","setIsLoggedIn","useAuth","toggleLogInOut","queryClient","QueryClient","ReactDOM","render","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.d62037cb.chunk.js","sourcesContent":["import { createGlobalStyle, DefaultTheme } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst commonTheme = {\n  accent: '#33CC33',\n};\n\nexport const lightTheme: DefaultTheme = {\n  ...commonTheme,\n  opositeColor: '#000',\n  bgColor: '#fafafa',\n  borderColor: 'rgb(219, 219, 219)',\n  color: 'rgb(38, 38, 38)',\n  errorMsgColor: '#ed4956',\n\n  selectedColor: '#eee',\n  selectedBgColor: 'rgb(51, 51, 51)',\n  unselectedColor: 'rgb(51, 51, 51)',\n  unselectedBgColor: '#eee',\n\n  itemRowColor: '#333',\n  itemRowBgColor: '#f0f0f0',\n\n  linearGradientLeft: 'linear-gradient(to left, darkgray, white)',\n  linearGradientRight: 'linear-gradient(to left, darkgray, white)',\n\n  ModalHslaBgColor: '#fff'\n};\nexport const darkTheme: DefaultTheme = {\n  ...commonTheme,\n  opositeColor: '#fff',\n  bgColor: '#000',\n  borderColor: '#1c1c1c',\n  color: '#fff',\n  errorMsgColor: '#fff',\n\n  selectedColor: 'rgb(51, 51, 51)',\n  selectedBgColor: '#eee',\n  unselectedColor: '#eee',\n  unselectedBgColor: 'rgb(51, 51, 51)',\n\n  backgroundImage: 'linear-gradient(315deg, #434343 0%, #000 74%)',\n  backgroundAttachment: 'fixed',\n\n  itemRowBgColor: '#333',\n  itemRowColor: '#fff',\n\n  linearGradientLeft: 'linear-gradient(to right, #333 30%, #aaa)',\n  linearGradientRight: 'linear-gradient(to left, #333 30%, #aaa)',\n\n  ModalHslaBgColor: 'hsla(0, 0%, 40%, 0.56863)'\n};\n\nexport const GlobalStyles = createGlobalStyle`\n    ${reset}\n    html {\n      scroll-behavior: smooth;\n    }\n    input {\n        all: unset\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        background-color: ${(props) => props.theme.bgColor};\n        font-size: 14px;\n        font-family: 'Open Sans', sans-serif;\n        color: ${(props) => props.theme.color};\n    }\n    a {\n        text-decoration: none;\n    }\n    div {\n      font-size: 18px;\n    }\n    .card {\n      --size: 370px;\n      width: var(--size);\n      height: calc(var(--size) * 0.5864);\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n      border-radius: calc(var(--size) * 0.04);\n      position: relative;\n      background-color: #54aafc;\n      background-image: radial-gradient(circle at 0% 0%, var(--start, #fff), var(--end, #e0e0e3));\n  --name-color-white: rgba(255, 255, 255, 0.5);\n    }\n    .card::before {\n      content: var(--name, \"Card\");\n      font-family: \"PAYW Pro\", \"PAYW Pro KR\", sans-serif;\n      font-size: calc(var(--size) / 14);\n      font-weight: 600;\n      color: var(--text-color, #333);\n      display: inline-block;\n      margin: calc(var(--size) / 13) 0 0 calc(var(--size) / 13);\n      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n    }\n    .card.kakao {\n      --name: \"Kakao\";\n      --start: #ffda55;\n      --end: #ff9900;\n      --text-color: #6f3806;\n    }\n    .card.shinhan {\n      --name: \"Shinhan\";\n      --start: #fff3c9;\n      --end: #63a1ff;\n      --text-color: #605645;\n    }\n    .card.samsung {\n      --name: \"Samsung\";\n      --start: #467aff;\n      --end: #1b45b2;\n      --text-color: #c4d0fd;\n      --name-color: var(--name-color-white);\n    }\n    .card.lotte {\n      --name: \"Lotte\";\n      --start: #f13e74;\n      --end: #7e4242;\n      --text-color: #ffb0c3;\n      --name-color: var(--name-color-white);\n    }\n    .card.woori {\n      --name: \"Woori\";\n      --start: #9de8ff;\n      --end: #3484ce;\n      --text-color: #0f3e69;\n    }\n    .card.cash {\n      --name: \"Cash\";\n      --start: #d4d66f;\n      --end: #66b105;\n      --text-color: #224804;\n    }\n    .card.hyundai {\n      --name: \"Hyundai\";\n      --start: #795e44;\n      --end: #2e2a27;\n      --text-color: #f5d1c1;\n      --name-color: var(--name-color-white);\n    }\n    .card.bc {\n      --name: \"BC\";\n      --start: #ff9f8a;\n      --end: #f45c06;\n      --text-color: #940606;\n    }\n`;\n","import { Helmet } from 'react-helmet';\n\nexport interface Props {\n  title: string;\n}\n\nexport default function PageTitle({ title }: Props) {\n  return (\n    <Helmet>\n      <title> {title} | Finance App </title>\n    </Helmet>\n  );\n}\n","const routes = {\n  home: '/',\n  signUp: '/sign-up',\n  calendar: '/calendar',\n  analytics: '/analytics',\n};\n\nexport default routes;\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { TOKEN } from './constants';\n\nconst CancelToken = axios.CancelToken;\nexport const source = CancelToken.source();\n\nconst axiosInstance: AxiosInstance = axios.create({\n  baseURL: 'https://mad-salad.herokuapp.com',\n  headers: {\n    Authorization: localStorage.getItem(TOKEN),\n  },\n  timeout: 6000,\n});\n\naxiosInstance.interceptors.request.use((config: AxiosRequestConfig) => {\n  if (config.url === '/auth/login') return config;\n  if (!config.headers.Authorization) {\n    source.cancel('Request cancelled, Because token is null');\n    window.location.reload();\n  }\n  return config;\n});\n\nexport default axiosInstance;\n","export const TOKEN = 'TOKEN';\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\nimport { GetAllAccountData } from '../../lib/api/types.d';\n\ninterface Props {\n  setAccountList: React.Dispatch<React.SetStateAction<string[]>>;\n  setGetAllAccountData: React.Dispatch<\n    React.SetStateAction<GetAllAccountData[]>\n  >;\n}\n\nconst GetAllAccount = ({ setAccountList, setGetAllAccountData }: Props) => {\n  let tmpList: string[] = [];\n  const { data } = useQuery<GetAllAccountData[] | undefined>(\n    'GetAllAccount',\n    async () => {\n      const response = await Axios.get('/acct/getall');\n      return response.data.data;\n    },\n  );\n\n  data?.map((el) => {\n    tmpList.push(el.name);\n  });\n\n  useEffect(() => {\n    setAccountList(tmpList);\n    setGetAllAccountData(data!);\n  }, [data]);\n\n  return <div></div>;\n};\n\nexport default GetAllAccount;\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\nimport {\n  GetAllAccountOutput,\n  GetAllCategoriesData,\n  GetAllCategoriesOutput,\n} from '../../lib/api/types';\n\ninterface Props {\n  setIncomeCategoryList: React.Dispatch<React.SetStateAction<string[]>>;\n  setOutcomeCategoryList: React.Dispatch<React.SetStateAction<string[]>>;\n  setCategoryList: React.Dispatch<React.SetStateAction<string[]>>;\n  setGetAllCategoriesData: React.Dispatch<\n    React.SetStateAction<GetAllCategoriesData[]>\n  >;\n}\nconst GetAllCategories = ({\n  setIncomeCategoryList,\n  setOutcomeCategoryList,\n  setCategoryList,\n  setGetAllCategoriesData,\n}: Props) => {\n  //incomeCategories 가져오기\n  const { data } = useQuery<GetAllCategoriesData[]>(\n    'GetAllCategories',\n    async () => {\n      const { data } = await Axios.get<GetAllCategoriesOutput>(\n        '/category/getAllCategories',\n      );\n      if (!data.ok) alert(data.error);\n      return data.data;\n    },\n  );\n\n  const tmpIncome: string[] = [];\n  const tmpOutcome: string[] = [];\n\n  data?.map((el) => {\n    if (el.type === 'EXPENDITURE') {\n      tmpOutcome.push(el.name);\n    } else {\n      tmpIncome.push(el.name);\n    }\n  });\n\n  useEffect(() => {\n    setIncomeCategoryList(tmpIncome!);\n    setCategoryList(tmpIncome);\n    setGetAllCategoriesData(data!);\n    setOutcomeCategoryList(tmpOutcome);\n  }, [data]);\n\n  return <div></div>;\n};\n\nexport default GetAllCategories;\n","import React from 'react';\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\n\ninterface Props {\n  accountId: number;\n  categoryName: string;\n  amount: string;\n  label: string;\n  date: string;\n  setSendIncome: React.Dispatch<React.SetStateAction<boolean>>;\n  closeModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst IncomeTransaction = ({\n  accountId,\n  amount,\n  categoryName,\n  label,\n  date,\n  setSendIncome,\n  closeModal,\n}: Props) => {\n  const { error } = useQuery('sendIncome', async () => {\n    const response = await Axios.post(`/transaction/income/${accountId}`, {\n      amount: amount,\n      categoryName,\n      content: label,\n      date: date,\n    });\n    console.log(response);\n    return response;\n  });\n\n  if (error) {\n    console.log('error');\n  }\n  setSendIncome(false);\n  closeModal(false);\n\n  return <div></div>;\n};\n\nexport default IncomeTransaction;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\n\ninterface Props {\n  accountId: number;\n  categoryId: number;\n  amount: string;\n  label: string;\n  date: string;\n  setSendOutcome: React.Dispatch<React.SetStateAction<boolean>>;\n  closeModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst OutcomeTransaction = ({\n  accountId,\n  amount,\n  categoryId,\n  label,\n  date,\n  setSendOutcome,\n  closeModal,\n}: Props) => {\n  const { error } = useQuery('sendOutcome', async () => {\n    const response = await Axios.post(`/transaction/expenditure/${accountId}`, {\n      amount: amount,\n      categoryId: categoryId,\n      content: label,\n      date: date,\n    });\n    if (response.data.ok === false) {\n      alert('Out of balance!');\n    }\n    return response;\n  });\n\n  if (error) {\n    console.log('error');\n  }\n\n  setSendOutcome(false);\n  closeModal(false);\n\n  return <div></div>;\n};\n\nexport default OutcomeTransaction;\n","import React, { useState, useEffect } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport styled from 'styled-components';\nimport './CardSlider.css';\n\nconst left = '<';\nconst right = '>';\n\nconst style = {\n  animation: 'float 2s ease-in-out infinite',\n  border: 'solid black 2px',\n  color: 'white',\n};\n\ninterface Props {\n  accountList: any[];\n  account: string;\n  setAccount: React.Dispatch<React.SetStateAction<string>>;\n  accountId: number;\n}\n\nconst CardSlider = ({ accountList, account, accountId, setAccount }: Props) => {\n  const [cardIndex, setCardIndex] = useState(accountId);\n\n  useEffect(() => {\n    setCardIndex(accountId);\n  }, [accountId]);\n\n  //한 달 전으로 이동\n  const changeIndex_minus = () => {\n    setCardIndex(cardIndex - 1);\n  };\n\n  //한 달 후로 이동\n  const changeIndex_plus = () => {\n    setCardIndex(cardIndex + 1);\n  };\n\n  let cardName: string[] = [];\n  accountList.map((el) => {\n    if (el.includes('신한') || el.includes('shinhan')) {\n      cardName.push('shinhan');\n    } else if (el.includes('삼성') || el.includes('samsung')) {\n      cardName.push('samsung');\n    } else if (el.includes('카카오') || el.includes('kakao')) {\n      cardName.push('kakao');\n    } else if (el.includes('롯데') || el.includes('lotte')) {\n      cardName.push('lotte');\n    } else if (el.includes('우리') || el.includes('woori')) {\n      cardName.push('woori');\n    } else if (el.includes('현금') || el.includes('cash')) {\n      cardName.push('cash');\n    } else if (el.includes('현대') || el.includes('hyundai')) {\n      cardName.push('hyundai');\n    } else if (el.includes('비씨') || el.includes('bc')) {\n      cardName.push('bc');\n    } else {\n      cardName.push('default');\n    }\n  });\n\n  return (\n    <SwipeableViews\n      enableMouseEvents\n      index={cardIndex}\n      disabled={Boolean(true)} //swipe 불가\n    >\n      {accountList.map((el, i) => (\n        <div className=\"contain\">\n          {i >= 1 ? <Button onClick={changeIndex_minus}>{left}</Button> : null}\n          <button\n            className={`card0 ${cardName[i] + '0'}`}\n            style={el === account ? style : undefined}\n            onClick={() => setAccount(el)}\n          >\n            {el}\n          </button>\n          {i < accountList.length - 1 ? (\n            <Button onClick={changeIndex_plus}>{right}</Button>\n          ) : null}\n        </div>\n      ))}\n    </SwipeableViews>\n  );\n};\n\nconst Button = styled.button`\n  border: none;\n  background-color: inherit;\n  color: black;\n  font-size: 45px;\n  display: inline-block;\n  cursor: pointer;\n`;\n\nexport default CardSlider;\n","import React, { useState } from 'react';\nimport './Modal.css';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GetAllAccount from '../query/GetAllAccount';\nimport GetAllCategories from '../query/GetAllCategories';\nimport IncomeTransaction from '../query/IncomeTransaction';\nimport OutcomeTransaction from '../query/OutcomeTransaction';\nimport CardSlider from '../calendar/CardSlider';\nimport { GetAllAccountData, GetAllCategoriesData } from '../../lib/api/types';\n\nconst modalBackground = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\nconst style = {\n  background: '#333333',\n  color: 'white',\n};\n\ninterface Props {\n  closeModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst NewModal = ({ closeModal }: Props) => {\n  //data 담아놓을 cache\n  const [getAllAccountData, setGetAllAccountData] = useState<\n    GetAllAccountData[]\n  >([]);\n  const [getAllCategoriesData, setGetAllCategoriesData] = useState<\n    GetAllCategoriesData[]\n  >([]);\n\n  //변수 지정\n  const [incomeSelect, setIncomeSelect] = useState(true);\n  const [outcomeSelect, setOutcomeSelect] = useState(false);\n  const utcDate = new Date().getTime();\n  const [date, setDate] = useState(\n    new Date(utcDate + 9 * 60 * 60 * 1000).toISOString().slice(0, 10),\n  );\n  const [incomeCategoryList, setIncomeCategoryList] = useState<string[]>([]);\n  const [outcomeCategoryList, setOutcomeCategoryList] = useState<string[]>([]);\n  const [categoryList, setCategoryList] = useState<string[]>([]);\n  const [category, setCategory] = useState('');\n  const [accountList, setAccountList] = useState<string[]>([]);\n  const [account, setAccount] = useState('');\n  const [label, setLabel] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const [accountId, setAccountId] = useState(0);\n  const [categoryId, setCategoryId] = useState(0);\n  const [sendIncome, setSendIncome] = useState(false);\n  const [sendOutcome, setSendOutcome] = useState(false);\n\n  const incomeCategory = () => {\n    setIncomeSelect(true);\n    setOutcomeSelect(false);\n    setCategory('');\n    setCategoryList(incomeCategoryList);\n  };\n\n  const outcomeCategory = () => {\n    setIncomeSelect(false);\n    setOutcomeSelect(true);\n    setCategory('');\n    setCategoryList(outcomeCategoryList);\n  };\n\n  const validateForm = () => {\n    if (!category) {\n      alert(\"Please check 'Category'.\");\n      return false;\n    }\n    if (!label) {\n      alert(\"Please check 'Label'.\");\n      return false;\n    }\n    if (!amount) {\n      const numberPatt = /[1-9]/g;\n      if (!numberPatt.test(amount)) alert('Amount should be number.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    //accountId 구하기\n    getAllAccountData.map((el) => {\n      if (el.name === account) {\n        setAccountId(el.id);\n      }\n    });\n\n    if (incomeSelect) {\n      setSendIncome(true);\n      console.log('sendIncome', sendIncome);\n    } else {\n      setSendOutcome(true);\n      console.log('sendOutcome', sendOutcome);\n    }\n  };\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      <motion.div\n        className=\"modalBackground\"\n        variants={modalBackground}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <GetAllAccount\n          setAccountList={setAccountList}\n          setGetAllAccountData={setGetAllAccountData}\n        />\n\n        <GetAllCategories\n          setIncomeCategoryList={setIncomeCategoryList}\n          setOutcomeCategoryList={setOutcomeCategoryList}\n          setCategoryList={setCategoryList}\n          setGetAllCategoriesData={setGetAllCategoriesData}\n        />\n\n        <div className=\"modalContainer\">\n          <div className=\"header\">\n            <div className=\"title\">\n              <h2>Add</h2>\n            </div>\n            <div className=\"titleCloseBtn\">\n              <button onClick={() => closeModal(false)}>X</button>\n            </div>\n          </div>\n          <div className=\"body\">\n            <div className=\"type_indicator\">\n              <button\n                style={incomeSelect ? style : undefined}\n                className=\"income\"\n                onClick={incomeCategory}\n              >\n                Income\n              </button>\n              <button\n                style={outcomeSelect ? style : undefined}\n                className=\"expenditure\"\n                onClick={outcomeCategory}\n              >\n                Expenditure\n              </button>\n            </div>\n            <div className=\"date\">\n              <input\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              ></input>\n            </div>\n            <div className=\"category\">\n              {categoryList.map((el) => {\n                return (\n                  <button\n                    style={category === el ? style : undefined}\n                    onClick={() => setCategory(el)}\n                  >\n                    {el}\n                  </button>\n                );\n              })}\n            </div>\n            <div className=\"cardType\">\n              <CardSlider\n                accountList={accountList}\n                account={account}\n                accountId={accountId}\n                setAccount={setAccount}\n              />\n            </div>\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Label\"\n              value={label}\n              onChange={(e) => setLabel(e.target.value)}\n            />\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n          <div className=\"footer\">\n            <button onClick={onSubmit} id=\"addBtn\">\n              Save\n            </button>\n            {sendIncome ? (\n              <IncomeTransaction\n                accountId={accountId}\n                amount={amount}\n                categoryName={category}\n                label={label}\n                date={date}\n                setSendIncome={setSendIncome}\n                closeModal={closeModal}\n              />\n            ) : null}\n            {sendOutcome ? (\n              <OutcomeTransaction\n                accountId={accountId}\n                amount={amount}\n                categoryId={categoryId}\n                label={label}\n                date={date}\n                setSendOutcome={setSendOutcome}\n                closeModal={closeModal}\n              />\n            ) : null}\n          </div>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default NewModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FetchHistoryInput } from '../../lib/api/types.d';\nimport SwipeableViews from 'react-swipeable-views';\n\ninterface Props {\n  monthDate: number;\n  onClicked: (data: FetchHistoryInput) => void;\n}\n\nconst list = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'June',\n  'July',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport default function MonthSelectorWrapper({ monthDate, onClicked }: Props) {\n  const monthIndex = monthDate - 1;\n\n  return (\n    <SwipeableViews\n      enableMouseEvents\n      index={monthIndex}\n      disabled={true} //swipe 불가\n    >\n      {list.map((el, i) => (\n        <React.Fragment key={i}>\n          <MonthList>\n            <MonthBefore>\n              {i >= 1 ? (\n                <Year className=\"year\">\n                  2021\n                  <br />\n                </Year>\n              ) : null}\n              <MonthBtnLeft\n                onClick={() => onClicked({ year: 2021, month: monthDate - 1 })}\n              >\n                {list[i - 1]}\n              </MonthBtnLeft>\n            </MonthBefore>\n            <MonthCurrent>\n              <Year>\n                2021\n                <br />\n              </Year>\n              <MonthBtn>{el}</MonthBtn>\n            </MonthCurrent>\n            <MonthAfter>\n              {i <= 10 ? (\n                <Year>\n                  2021\n                  <br />\n                </Year>\n              ) : null}\n              <MonthBtnRight\n                onClick={() => onClicked({ year: 2021, month: monthDate + 1 })}\n              >\n                {list[i + 1]}\n              </MonthBtnRight>\n            </MonthAfter>\n          </MonthList>\n        </React.Fragment>\n      ))}\n    </SwipeableViews>\n  );\n}\nconst MonthList = styled.div`\n  width: 90%;\n  margin: 10px auto;\n  display: flex;\n  box-sizing: border-box;\n  text-align: center;\n  font-weight: bolder;\n`;\n\nconst MonthCurrent = styled.div`\n  color: black;\n  display: 'center';\n  padding: 15;\n  height: 100;\n  color: ${(props) => props.theme.opositeColor};\n  flex: 1;\n  width: 40%;\n  font-size: 45px;\n`;\n\nconst MonthBefore = styled.div`\n  color: darkgray;\n  flex: 1;\n  width: 25%;\n  font-size: 45px;\n  &:hover {\n    button,\n    div {\n      color: ${(props) => props.theme.opositeColor};\n      transition: color 0.4s ease;\n    }\n  }\n`;\n\nconst MonthAfter = styled.div`\n  color: darkgray;\n  flex: 1;\n  width: 25%;\n  font-size: 45px;\n  &:hover {\n    button,\n    div {\n      color: ${(props) => props.theme.opositeColor};\n      transition: color 0.4s ease;\n    }\n  }\n`;\n\nconst Year = styled.div`\n  font-weight: normal;\n  font-size: 19px;\n`;\n\nexport const MonthBtn = styled.button`\n  border: none;\n  color: inherit;\n  background-color: inherit;\n  font-size: 45px;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: bold;\n`;\nconst MonthBtnLeft = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 45px;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: bold;\n  background: ${(props) => props.theme.linearGradientLeft};\n  color: transparent;\n  -webkit-background-clip: text;\n`;\n\nconst MonthBtnRight = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 45px;\n  display: inline-block;\n  font-weight: bold;\n  background: linear-gradient(to left, #333 30%, #aaa);\n  background: ${(props) => props.theme.linearGradientRight};\n  color: transparent;\n  -webkit-background-clip: text;\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport styled from 'styled-components';\nimport { MonthBtn } from '../anlytics/MonthSelectorWrapper';\n\nconst list = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'June',\n  'July',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\ninterface Props {\n  index: number;\n  changeIndex_minus: () => void;\n  changeIndex_plus: () => void;\n}\nconst SwipeView = ({ index, changeIndex_minus, changeIndex_plus }: Props) => {\n  return (\n    <SwipeableViews\n      enableMouseEvents\n      index={index}\n      disabled={true} //swipe 불가\n    >\n      {list.map((el, i) => (\n        <React.Fragment key={i}>\n          <MonthList>\n            <MonthBefore>\n              {i >= 1 ? (\n                <Year>\n                  2021\n                  <br />\n                </Year>\n              ) : null}\n              <MonthBtnLeft onClick={changeIndex_minus}>\n                {list[i - 1]}\n              </MonthBtnLeft>\n            </MonthBefore>\n            <MonthCurrent>\n              <Year>\n                2021\n                <br />\n              </Year>\n              <MonthBtn>{el}</MonthBtn>\n            </MonthCurrent>\n            <MonthAfter>\n              {i <= 10 ? (\n                <Year>\n                  2021\n                  <br />\n                </Year>\n              ) : null}\n              <MonthBtnRight onClick={changeIndex_plus}>\n                {list[i + 1]}\n              </MonthBtnRight>\n            </MonthAfter>\n          </MonthList>\n        </React.Fragment>\n      ))}\n    </SwipeableViews>\n  );\n};\n\nconst MonthList = styled.div`\n  width: 90%;\n  margin: 10px auto;\n  display: flex;\n  box-sizing: border-box;\n  text-align: center;\n  font-weight: bolder;\n`;\n\nconst MonthBefore = styled.div`\n  color: darkgray;\n  flex: 1;\n  width: 25%;\n  font-size: 45px;\n`;\n\nconst MonthCurrent = styled.div`\n  color: black;\n  display: 'center';\n  padding: 15;\n  height: 100;\n  color: '#000';\n  flex: 1;\n  width: 40%;\n  font-size: 45px;\n`;\n\nconst MonthAfter = styled.div`\n  color: darkgray;\n  flex: 1;\n  width: 25%;\n  font-size: 45px;\n`;\n\nconst Year = styled.div`\n  font-weight: normal;\n  font-size: 19px;\n`;\n\nconst MonthBtnLeft = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 45px;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: bold;\n  /* color: darkgray; */\n  background: linear-gradient(to left, darkgray, white);\n  color: transparent;\n  -webkit-background-clip: text;\n`;\n\nconst MonthBtnRight = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 45px;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: bold;\n  background: linear-gradient(to right, darkgray, white);\n  color: transparent;\n  -webkit-background-clip: text;\n`;\n\nexport default SwipeView;\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\nimport { ClickedDataType } from '../calendar/CalendarGrid';\n\ninterface Props {\n  clickedData: ClickedDataType;\n  label: string;\n  amount: string;\n  categoryName: string;\n  date: string;\n  accountId: number;\n  setSendEdit: React.Dispatch<React.SetStateAction<boolean>>;\n  setOpenModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst UpdateOne = ({\n  clickedData,\n  label,\n  amount,\n  categoryName,\n  date,\n  accountId,\n  setSendEdit,\n  setOpenModal,\n}: Props) => {\n  const { error, data } = useQuery('updateOne', async () => {\n    let tmpType = 'INCOME';\n    if (clickedData.title.slice(0, 1) === '-') {\n      tmpType = 'EXPENDITURE';\n    }\n\n    return Axios.put('transaction/updateOne', {\n      transactionId: clickedData.index,\n      content: label,\n      amount: amount,\n      categoryName: categoryName,\n      type: tmpType,\n      createdAt: date,\n      accountId: accountId,\n    });\n  });\n\n  if (error) {\n    console.log('error');\n  }\n\n  useEffect(() => {\n    setSendEdit(false);\n    setOpenModal(false);\n  }, [data]);\n\n  return <div></div>;\n};\n\nexport default UpdateOne;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\nimport { ClickedDataType } from '../calendar/CalendarGrid';\n\nexport interface Props {\n  clickedData: ClickedDataType;\n  setSendDelete: React.Dispatch<React.SetStateAction<boolean>>;\n  setOpenModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n// 약간 수정함\nconst DeleteOne = ({ clickedData, setSendDelete, setOpenModal }: Props) => {\n  useQuery('deleteOne', async () => {\n    await Axios.post('/transaction/deleteOne', {\n      transactionId: clickedData.index,\n    });\n  });\n\n  setSendDelete(false);\n  setOpenModal(false);\n  return <div></div>;\n};\n\nexport default DeleteOne;\n","import React, { useState, useEffect } from 'react';\nimport '../UI/Modal.css';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport CardSlider from './CardSlider';\nimport GetAllAccount from '../query/GetAllAccount';\nimport UpdateOne from '../query/UpdateOne';\nimport DeleteOne from '../query/DeleteOne';\nimport { ClickedDataType } from './CalendarGrid';\nimport { GetAllAccountData, GetAllCategoriesData } from '../../lib/api/types';\nimport GetAllCategories from '../query/GetAllCategories';\n\nconst modalBackground = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\nconst style = {\n  background: '#333333',\n  color: 'white',\n};\n\ninterface Props {\n  setOpenModal: React.Dispatch<React.SetStateAction<boolean>>;\n  monthData: any[];\n  clickedData?: ClickedDataType;\n}\n\nconst EditModal = ({ setOpenModal, monthData, clickedData }: Props) => {\n  //data 담아놓을 cache\n  const [getAllAccountData, setGetAllAccountData] = useState<\n    GetAllAccountData[]\n  >([]);\n  const [getAllCategoriesData, setGetAllCategoriesData] = useState<\n    GetAllCategoriesData[]\n  >([]);\n\n  //변수 지정\n  const [incomeSelect, setIncomeSelect] = useState(true);\n  const [outcomeSelect, setOutcomeSelect] = useState(false);\n  const utcDate = new Date().getTime();\n  const [date, setDate] = useState(\n    new Date(utcDate + 9 * 60 * 60 * 1000).toISOString().slice(0, 10),\n  );\n  const [incomeCategoryList, setIncomeCategoryList] = useState<string[]>([]);\n  const [outcomeCategoryList, setOutcomeCategoryList] = useState<string[]>([]);\n  const [categoryList, setCategoryList] = useState<string[]>([]);\n  const [category, setCategory] = useState('');\n  const [accountList, setAccountList] = useState<string[]>([]);\n  const [account, setAccount] = useState('');\n  const [label, setLabel] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const [accountId, setAccountId] = useState(0);\n  const [categoryId, setCategoryId] = useState(0);\n  const [sendEdit, setSendEdit] = useState(false);\n  const [sendDelete, setSendDelete] = useState(false);\n\n  useEffect(() => {\n    monthData.map((el) => {\n      if (el.id === clickedData?.index) {\n        //income or expenditure 설정\n        if (el.type === 'INCOME') {\n          incomeCategory();\n        } else {\n          outcomeCategory();\n        }\n\n        //date 설정\n        setDate(el.createdAt.slice(0, 10));\n\n        //category 설정\n        getAllCategoriesData?.map((element) => {\n          if (el.categoryId === element.id) {\n            setCategory(element.name);\n            setCategoryId(el.categoryId);\n          }\n        });\n\n        //account 설정\n        getAllAccountData?.map((element, idx) => {\n          if (el.accountId === element.id) {\n            setAccount(element.name);\n            setAccountId(idx);\n          }\n        });\n\n        //label, amount 설정\n        setLabel(el.content);\n        setAmount(el.amount);\n      }\n    });\n  }, [\n    clickedData,\n    incomeCategoryList,\n    outcomeCategoryList,\n    getAllCategoriesData,\n    getAllAccountData,\n  ]);\n\n  console.log(accountId);\n\n  const incomeCategory = () => {\n    setIncomeSelect(true);\n    setOutcomeSelect(false);\n    setCategory('');\n    setCategoryList(incomeCategoryList);\n  };\n\n  const outcomeCategory = () => {\n    setIncomeSelect(false);\n    setOutcomeSelect(true);\n    setCategory('');\n    setCategoryList(outcomeCategoryList);\n  };\n\n  const validateForm = () => {\n    if (!category) {\n      alert(\"Please check 'Category'.\");\n      return false;\n    }\n    if (!label) {\n      alert(\"Please check 'Label'.\");\n      return false;\n    }\n    if (!amount) {\n      const numberPatt = /[1-9]/g;\n      if (!numberPatt.test(amount)) alert('Amount should be number.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmitAdd = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    //accountId 구하기\n    getAllAccountData.map((el) => {\n      if (el.name === account) {\n        setAccountId(el.id);\n      }\n    });\n\n    setSendEdit(true);\n  };\n\n  if (!clickedData) return null;\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      <motion.div\n        className=\"modalBackground\"\n        variants={modalBackground}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <GetAllAccount\n          setAccountList={setAccountList}\n          setGetAllAccountData={setGetAllAccountData}\n        />\n\n        <GetAllCategories\n          setIncomeCategoryList={setIncomeCategoryList}\n          setOutcomeCategoryList={setOutcomeCategoryList}\n          setCategoryList={setCategoryList}\n          setGetAllCategoriesData={setGetAllCategoriesData}\n        />\n\n        <div className=\"modalContainer\">\n          <div className=\"header\">\n            <div className=\"title\">\n              <h2>Edit</h2>\n            </div>\n            <div className=\"titleCloseBtn\">\n              <button onClick={() => setOpenModal(false)}>X</button>\n            </div>\n          </div>\n          <div className=\"body\">\n            <div className=\"type_indicator\">\n              <button\n                style={incomeSelect ? style : undefined}\n                className=\"income\"\n                onClick={incomeCategory}\n              >\n                Income\n              </button>\n              <button\n                style={outcomeSelect ? style : undefined}\n                className=\"expenditure\"\n                onClick={outcomeCategory}\n              >\n                Expenditure\n              </button>\n            </div>\n            <div className=\"date\">\n              <input\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              ></input>\n            </div>\n            <div className=\"category\">\n              {categoryList.map((el, idx) => {\n                return (\n                  <button\n                    key={idx}\n                    style={category === el ? style : undefined}\n                    onClick={() => setCategory(el)}\n                  >\n                    {el}\n                  </button>\n                );\n              })}\n            </div>\n            <div className=\"cardType\">\n              <CardSlider\n                accountList={accountList}\n                account={account}\n                accountId={accountId}\n                setAccount={setAccount}\n              />\n            </div>\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Label\"\n              value={label}\n              onChange={(e) => setLabel(e.target.value)}\n            />\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n          <div className=\"footer\">\n            <button onClick={() => setSendDelete(true)} id=\"cancelBtn\">\n              Remove\n            </button>\n            <button onClick={onSubmitAdd}>Save</button>\n            {sendEdit ? (\n              <UpdateOne\n                clickedData={clickedData}\n                label={label}\n                amount={amount}\n                categoryName={category}\n                date={date}\n                accountId={accountId}\n                setSendEdit={setSendEdit}\n                setOpenModal={setOpenModal}\n              />\n            ) : null}\n            {sendDelete ? (\n              <DeleteOne\n                clickedData={clickedData}\n                setSendDelete={setSendDelete}\n                setOpenModal={setOpenModal}\n              />\n            ) : null}\n          </div>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default EditModal;\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\nimport { ClickedDataType } from '../calendar/CalendarGrid';\nimport { FetchHistoryData, FetchHistoryOutput } from '../../lib/api/types';\n\ninterface Props {\n  index: number;\n  setHistory: React.Dispatch<React.SetStateAction<ClickedDataType[]>>;\n  setMonthData: React.Dispatch<React.SetStateAction<FetchHistoryData[]>>;\n  income: string[];\n  setIncome: React.Dispatch<React.SetStateAction<string[]>>;\n  outcome: string[];\n  setOutcome: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nconst GetMonthHistory = ({\n  index,\n  setHistory,\n  setMonthData,\n  income,\n  setIncome,\n  outcome,\n  setOutcome,\n}: Props) => {\n  const { data } = useQuery('monthData', async () => {\n    try {\n      const { data } = await Axios.get<FetchHistoryOutput>(\n        `/transaction/history?year=2021&month=${index + 1}`,\n      );\n      if (!data.ok) {\n        alert(data.error);\n      }\n      return data.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  });\n\n  let year = 0;\n  let month = 0;\n  let day = 0;\n  let hour = 0;\n  let min = 0;\n\n  useEffect(() => {\n    let tmpList: ClickedDataType[] = [];\n    let tmpIncome = 0;\n    let tmpOutcome = 0;\n\n    data?.map((el) => {\n      let tmpTitle = '';\n      if (el.type === 'INCOME') {\n        tmpTitle = '+' + el.amount;\n        tmpIncome += el.amount;\n      } else {\n        tmpTitle = '-' + el.amount;\n        tmpOutcome += el.amount;\n      }\n\n      year = +el.createdAt.slice(0, 4);\n      month = +el.createdAt.slice(5, 7) - 1;\n      day = +el.createdAt.slice(8, 10);\n      hour = +el.createdAt.slice(11, 13);\n      min = +el.createdAt.slice(14, 16);\n\n      tmpList.push({\n        title: tmpTitle,\n        allDay: false,\n        start: new Date(year, month, day, hour, min),\n        end: new Date(year, month, day, hour, min),\n        index: el.id,\n      });\n    });\n\n    setMonthData(data!);\n    setHistory(tmpList!);\n\n    setIncome([\n      ...income.slice(0, +month),\n      tmpIncome.toLocaleString('ko-KR'),\n      ...income.slice(+month + 1),\n    ]);\n\n    setOutcome([\n      ...outcome.slice(0, +month),\n      tmpOutcome.toLocaleString('ko-KR'),\n      ...outcome.slice(+month + 1),\n    ]);\n  }, [data]);\n\n  return <div></div>;\n};\nexport default GetMonthHistory;\n","import React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport EditModal from './EditModal';\nimport '../UI/Modal.css';\nimport GetMonthHistory from '../query/GetMonthHistory';\nimport { FetchHistoryData } from '../../lib/api/types';\n\nmoment.locale('en-GB');\nconst localizer = momentLocalizer(moment);\nconst now = new Date();\n\ninterface Props {\n  index: number;\n  income: string[];\n  setIncome: React.Dispatch<React.SetStateAction<string[]>>;\n  outcome: string[];\n  setOutcome: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nexport interface ClickedDataType {\n  title: string;\n  allDay: boolean;\n  start: Date;\n  end: Date;\n  index: number;\n}\n\nconst CalendarGrid = ({\n  index,\n  income,\n  setIncome,\n  outcome,\n  setOutcome,\n}: Props) => {\n  now.setMonth(index);\n  const [openModal, setOpenModal] = useState(false);\n  const [monthData, setMonthData] = useState<FetchHistoryData[]>([]);\n  const [history, setHistory] = useState<ClickedDataType[]>([]);\n  const [clickedEvent, setClickedEvent] = useState<ClickedDataType>();\n\n  const popUp = (clickedData: ClickedDataType) => {\n    setClickedEvent(clickedData);\n    setOpenModal(true);\n  };\n\n  const eventStyleGetter = (event: ClickedDataType) => {\n    let style;\n    if (event?.title?.slice(0, 1) === '-') {\n      style = {\n        backgroundColor: 'transparent',\n        color: 'crimson',\n        fontWeight: 700,\n        paddingRight: '10px',\n        textAlign: 'right' as 'right',\n      };\n    } else {\n      style = {\n        backgroundColor: 'transparent',\n        color: 'royalblue',\n        fontWeight: 700,\n      };\n    }\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div\n      style={{\n        height: 700,\n        paddingLeft: 100,\n        paddingRight: 100,\n        paddingTop: 40,\n        paddingBottom: 100,\n      }}\n    >\n      <GetMonthHistory\n        index={index}\n        setHistory={setHistory}\n        setMonthData={setMonthData}\n        income={income}\n        setIncome={setIncome}\n        outcome={outcome}\n        setOutcome={setOutcome}\n      />\n      {openModal && (\n        <EditModal\n          setOpenModal={setOpenModal}\n          monthData={monthData}\n          clickedData={clickedEvent}\n        />\n      )}\n      <Calendar\n        toolbar={false}\n        localizer={localizer}\n        events={history}\n        step={60}\n        views={['month']}\n        defaultDate={now}\n        onSelectEvent={popUp}\n        eventPropGetter={eventStyleGetter}\n        showAllEvents={Boolean(true)}\n        doShowMoreDrillDown={Boolean(true)}\n      />\n    </div>\n  );\n};\n\nexport default CalendarGrid;\n","export const monthStr = [\n  '',\n  'Jan',\n  'Feb',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'Aug',\n  'Sept',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const dayStr = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n\nexport function dateWithDay(dateStr: string): string {\n  const dateObj = new Date(dateStr);\n  const day = dateObj.getDay();\n  const date = dateObj.getDate();\n  let dateExtension = 'th';\n  if (date == 1) dateExtension = 'st';\n  else if (date == 2) dateExtension = 'nd';\n  else if (date == 3) dateExtension = 'rd';\n  return `${dayStr[day]}, ${date}${dateExtension}`;\n}\n\nexport function priceToString(price: number): string {\n  return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nexport const getPaymentEnKeyName = (paymentName: string) => {\n  const pName = paymentName.toLowerCase();\n\n  if (pName.includes('카카오') || pName.includes('kakao')) {\n    return 'kakao';\n  } else if (pName.includes('신한') || pName.includes('shinhan')) {\n    return 'shinhan';\n  } else if (pName.includes('삼성') || pName.includes('samsung')) {\n    return 'samsung';\n  } else if (pName.includes('롯데') || pName.includes('lotte')) {\n    return 'lotte';\n  } else if (pName.includes('우리') || pName.includes('woori')) {\n    return 'woori';\n  } else if (pName.includes('현금') || pName.includes('cash')) {\n    return 'cash';\n  } else if (pName.includes('현대') || pName.includes('hyundai')) {\n    return 'hyundai';\n  } else if (pName.includes('비씨') || pName.includes('bc')) {\n    return 'bc';\n  } else {\n    return '';\n  }\n};\n","import React, { createContext, ReactNode, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport const PortalContext = createContext<HTMLDivElement | null>(null);\n\ninterface PortalProviderProps {\n  children: ReactNode;\n}\n\nexport function PortalProvider({ children }: PortalProviderProps) {\n  const [\n    portalContainerRef,\n    setPortalContainerRef,\n  ] = useState<HTMLDivElement | null>(null);\n\n  return (\n    <PortalContext.Provider value={portalContainerRef}>\n      {children}\n      <div\n        id=\"portal-container\"\n        ref={(elem) => {\n          if (portalContainerRef !== null || elem === null) {\n            return;\n          }\n\n          setPortalContainerRef(elem);\n        }}\n      />\n    </PortalContext.Provider>\n  );\n}\n\ninterface PortalConsumerProps {\n  children: ReactNode;\n}\n\nexport function PortalConsumer({ children }: PortalConsumerProps) {\n  return (\n    <PortalContext.Consumer>\n      {(portalContainerRef) => {\n        if (portalContainerRef === null) {\n          return null;\n        }\n\n        return createPortal(children, portalContainerRef);\n      }}\n    </PortalContext.Consumer>\n  );\n}\n","import { useState } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { PortalConsumer } from '../../providers/PortalProvider';\n\ninterface Props {\n  children: React.ReactNode;\n  isClose: boolean;\n  onClose: () => void;\n}\n\nexport default function Modal({ children, isClose, onClose }: Props) {\n  const clickHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n  return (\n    <PortalConsumer>\n      <ModalContainer close={isClose} onClick={onClose}>\n        <HistoryFormWrapper onClick={clickHandler} close={isClose}>\n          {children}\n        </HistoryFormWrapper>\n      </ModalContainer>\n    </PortalConsumer>\n  );\n}\n\nconst blur = keyframes`\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\nconst up = keyframes`\n    from {\n        transform: translateY(100%);\n    }\n    to {\n        transform: translateY(0%);\n    }\n`;\n\nconst ModalContainer = styled.div<{ close: boolean }>`\n  display: flex;\n  position: fixed;\n  align-items: flex-end;\n  justify-content: center;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(3.125rem);\n  transition: ${(props) => (props.close ? 'opacity 0.5s' : 'opacity 0.3s')};\n  opacity: ${(props) => (props.close ? 0 : 1)};\n  animation: ${blur} 0.5s;\n  z-index: ${(props) => (props.close ? -1 : 1)};\n`;\n\nconst HistoryFormWrapper = styled.div<{ close: boolean }>`\n  position: relative;\n  width: 670px;\n  animation: ${up} 550ms cubic-bezier(0.38, 0.24, 0.22, 1);\n  bottom: 0px;\n  max-height: calc(100% - 30px);\n  height: 92%;\n  background: ${(props) => props.theme.ModalHslaBgColor};\n  border-radius: 30px 30px 0px 0px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n","import { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport { GetAllAccountData } from '../../../lib/api/types';\nimport { getPaymentEnKeyName } from '../../../lib/helper';\n\ninterface Props {\n  pickedCard: string;\n  onClicked: (e: React.MouseEvent<HTMLDivElement>) => void;\n  allCardData: GetAllAccountData[];\n}\n\nexport default function HistoryCardContainer({\n  pickedCard,\n  onClicked,\n  allCardData,\n}: Props) {\n  if (!allCardData) return <p>등록한 카드가 없습니다.</p>;\n\n  return (\n    <CardContainer>\n      {allCardData?.map((card, idx) => {\n        const EnKey = getPaymentEnKeyName(card.name);\n        return (\n          <Card\n            key={card.id}\n            className={`card ${EnKey} ${pickedCard === EnKey && 'selected'}`}\n            onClick={onClicked}\n          >\n            <FontAwesomeIcon\n              size=\"2x\"\n              color={'rgb(51, 51, 51)'}\n              icon={faCheckCircle}\n            />\n          </Card>\n        );\n      })}\n    </CardContainer>\n  );\n}\n\nconst CardContainer = styled.div`\n  width: 100%;\n  display: flex;\n  overflow: auto;\n  flex: none;\n  scroll-snap-type: x mandatory;\n  padding-left: 145px;\n  padding-right: 170px;\n  padding-bottom: 14px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  .card {\n    flex: none;\n    margin-right: 32px;\n    scroll-snap-align: center;\n    cursor: pointer;\n  }\n  .card svg {\n    display: none;\n    font-size: 41px;\n    position: absolute;\n    right: 18px;\n    bottom: 18px;\n  }\n  .card.selected svg {\n    display: block;\n  }\n`;\n\nconst Card = styled.div``;\n","import styled from 'styled-components';\nimport React from 'react';\nimport { dateWithDay } from '../../../lib/helper';\n\ninterface Props {\n  children: React.ReactNode;\n  createdAt: string;\n}\n\nexport default function HistoryColumn({ children, createdAt }: Props) {\n  if (React.Children.toArray(children).length === 0) return null;\n\n  return (\n    <Column>\n      <DateIndicator>{dateWithDay(createdAt)}</DateIndicator>\n      {children}\n    </Column>\n  );\n}\n\nconst Column = styled.div`\n  width: 100%;\n`;\nconst DateIndicator = styled.div`\n  margin-bottom: 1rem;\n  font-weight: 500;\n  font-size: 1rem;\n  line-height: 1.1875rem;\n  text-align: center;\n  color: #979797;\n`;\n","import styled from 'styled-components';\nimport { priceToString } from '../../../lib/helper';\n\ninterface Props {\n  id?: number;\n  type?: 'INCOME' | 'EXPENDITURE' | 'SEND' | 'RECEIVE';\n  accountId?: number;\n  content?: string;\n  amount?: number;\n  createdAt?: string;\n  accountName: string;\n  onClicked: () => void;\n}\n\nexport default function HistoryRow({\n  content,\n  type,\n  amount,\n  accountName,\n  onClicked,\n}: Props) {\n  return (\n    <Row onClick={onClicked}>\n      <HistoryCard>\n        <Front>\n          <Payment>{accountName}</Payment>\n          <Content>{content}</Content>\n        </Front>\n        <Back>\n          <Amount isIncome={type === 'INCOME'}>\n            {' '}\n            {type === 'INCOME' ? '+' : '-'}\n            {priceToString(amount!)}\n          </Amount>\n        </Back>\n      </HistoryCard>\n    </Row>\n  );\n}\n\nconst Row = styled.div`\n  width: 100%;\n`;\n\nconst HistoryCard = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1.4375rem 1.9375rem;\n  height: 5.4375rem;\n  width: 100%;\n  background: ${(props) => props.theme.itemRowBgColor};\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n  border-radius: 1.25rem;\n  margin-bottom: 1.0625rem;\n  cursor: pointer;\n`;\n\nconst Front = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Payment = styled.div`\n  font-weight: 500;\n  font-size: 0.8125rem;\n  line-height: 1rem;\n  color: #979797;\n`;\n\nconst Content = styled.div`\n  font-weight: 600;\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  margin-top: 0.1875rem;\n  color: ${(props) => props.theme.itemRowColor};\n`;\n\nconst Back = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Amount = styled.div<{ isIncome: boolean }>`\n  font-weight: 700;\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  color: ${(props) => (props.isIncome ? '#54aafc' : '#ee4337')};\n`;\n","import styled from 'styled-components';\nimport { GetAllCategoriesData } from '../../../lib/api/types';\n\ninterface Props {\n  pickedCategory: string;\n  pickedType: 'expenditure' | 'income' | 'receive' | 'send';\n  onClicked: (category: string) => void;\n  allCategoryData: GetAllCategoriesData[];\n}\n\nexport default function HistoryCategoryContainer({\n  pickedCategory,\n  pickedType,\n  onClicked,\n  allCategoryData,\n}: Props) {\n  if (!allCategoryData) return <p>카테고리가 존재하지 않습니다.</p>;\n\n  return (\n    <>\n      {allCategoryData?.map((cat) => {\n        if (cat.type.toLowerCase() !== pickedType.toLowerCase()) return;\n        return (\n          <CategoryIndicator\n            key={cat.name}\n            selected={pickedCategory === cat.name}\n            onClick={() => onClicked(cat.name)}\n          >\n            {cat.name}\n          </CategoryIndicator>\n        );\n      })}\n    </>\n  );\n}\n\nconst CategoryIndicator = styled.div<{ selected?: boolean }>`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  margin: 0 13px 13px 0;\n  border-radius: 15px;\n  padding: 13px 20px;\n  background: ${(props) =>\n    props.selected\n      ? props.theme.selectedBgColor\n      : props.theme.unselectedBgColor};\n  color: ${(props) =>\n    props.selected ? props.theme.selectedColor : props.theme.unselectedColor};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`;\n","import Axios from '../defaultClient';\nimport { GetAllAccountData, GetAllAccountOutput } from './types';\n\nexport const getAllAccount = async (): Promise<\n  GetAllAccountData[] | undefined\n> => {\n  const { data } = await Axios.get<GetAllAccountOutput>('/acct/getall');\n  if (!data.ok) {\n    alert(data.error);\n  }\n  console.log(data.data);\n  return data.data;\n};\n","import Axios from '../defaultClient';\nimport { GetAllCategoriesData, GetAllCategoriesOutput } from './types';\n\nexport const getAllCategories = async (): Promise<\n  GetAllCategoriesData[] | undefined\n> => {\n  const { data } = await Axios.get<GetAllCategoriesOutput>(\n    '/category/getAllCategories',\n  );\n  if (!data.ok) {\n    alert(data.error);\n  }\n  console.log(data.data);\n  return data.data;\n};\n","import Axios, { source } from '../defaultClient';\nimport { CoreOutput } from '../CoreOutput';\nimport { AxiosResponse } from 'axios';\nimport {\n  CreateTransactionInput,\n  GetPendingTransactionData,\n  GetPendingTransactionOutput,\n  ReceivePendingTransactionInput,\n  UpdateTransactionInput,\n} from './types.d';\n\nexport const createTransaction = async (\n  createTransactionInput: CreateTransactionInput,\n): Promise<AxiosResponse<CoreOutput>> => {\n  return Axios.post(\n    `/transaction/${createTransactionInput.type}/${createTransactionInput.accountId}`,\n    {\n      ...createTransactionInput,\n    },\n  );\n};\n\nexport const updateTransaction = async (\n  updateTransactionInput: UpdateTransactionInput,\n): Promise<AxiosResponse<CoreOutput>> => {\n  return Axios.put<CoreOutput>('/transaction/updateOne', {\n    ...updateTransactionInput,\n    type: updateTransactionInput.type.toUpperCase(),\n  });\n};\n\nexport const deleteTransaction = async (\n  transactionId: number,\n): Promise<AxiosResponse<CoreOutput>> => {\n  return Axios.post<CoreOutput>(`/transaction/deleteOne`, {\n    transactionId,\n  });\n};\n\nexport const getPendingTransactionAPI = async (): Promise<\n  GetPendingTransactionData | undefined\n> => {\n  const { data } = await Axios.get<GetPendingTransactionOutput>(\n    '/transaction/getPending',\n    {\n      cancelToken: source.token,\n    },\n  );\n\n  if (!data.ok) {\n    alert(data.error);\n  }\n  return data.data;\n};\n\nexport const ReceivePendingTransactionAPI = async (\n  receivePendingTransactionInput: ReceivePendingTransactionInput,\n): Promise<AxiosResponse<CoreOutput>> => {\n  return Axios.post('/transaction/receive', {\n    ...receivePendingTransactionInput,\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from 'react-query';\nimport styled from 'styled-components';\nimport Modal from '../../UI/Modal';\nimport HistoryCardContainer from './HistoryCardContainer';\nimport HistoryColumn from './HistoryColumn';\nimport HistoryRow from './HistoryRow';\nimport HistoryCategoryContainer from './HistoryCategoryContainer';\nimport {\n  DefaultHistoryData,\n  FetchHistoryByCreatedAtData,\n  FetchHistoryInput,\n  GetAllAccountData,\n  GetAllCategoriesData,\n} from '../../../lib/api/types';\nimport { SumIndicatorType } from '../../../pages/HistoryView';\nimport { getAllAccount } from '../../../lib/api/account';\nimport { getAllCategories } from '../../../lib/api/category';\nimport { getPaymentEnKeyName } from '../../../lib/helper';\nimport {\n  createTransaction,\n  deleteTransaction,\n  updateTransaction,\n} from '../../../lib/api/transaction';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  historyDataByCreatedAt: FetchHistoryByCreatedAtData[][];\n  selectedSumIndicator: SumIndicatorType;\n  selectedDate: FetchHistoryInput;\n}\n\ntype PickedDataType = {\n  transactionId?: number;\n  type: 'expenditure' | 'income' | 'receive' | 'send';\n  categoryName: string;\n  categoryId?: number;\n  accountName: string;\n  accountId?: number;\n  label: string;\n  amount: string;\n};\nexport default function HistoryViewWrapper({\n  historyDataByCreatedAt,\n  selectedSumIndicator,\n  selectedDate,\n}: Props) {\n  const [historyFormClicked, setHistoryFormClicked] = useState(false);\n  const [dateKeystroke, setDateKeystroke] = useState({\n    year: selectedDate.year,\n    month: selectedDate.month,\n    day: 21,\n  });\n\n  const [pickedData, setPickedData] = useState<PickedDataType>({\n    transactionId: undefined,\n    type: 'expenditure',\n    categoryName: '식비',\n    categoryId: undefined,\n    accountId: undefined,\n    accountName: '',\n    label: '',\n    amount: '',\n  });\n\n  useEffect(() => {\n    if (pickedData.type === 'income')\n      setPickedData((prev) => ({ ...prev, categoryName: '월급' }));\n    else setPickedData((prev) => ({ ...prev, categoryName: '식비' }));\n  }, [pickedData.type]);\n\n  useEffect(() => {\n    setDateKeystroke({\n      year: selectedDate.year,\n      month: selectedDate.month,\n      day: 21,\n    });\n  }, [selectedDate]);\n\n  const { mutateAsync: mutateUpdateAsync, isLoading: isUpdating } = useMutation(\n    updateTransaction,\n  );\n  const { mutateAsync: mutateDeleteAsync, isLoading: isDeleting } = useMutation(\n    deleteTransaction,\n  );\n  const { mutateAsync: mutateCreateAsync, isLoading: isCreating } = useMutation(\n    createTransaction,\n  );\n\n  const { data: accountData } = useQuery<GetAllAccountData[] | undefined>(\n    ['account', 'all'],\n    () => getAllAccount(),\n    {\n      retry: 1,\n    },\n  );\n\n  const { data: categoryData } = useQuery<GetAllCategoriesData[] | undefined>(\n    ['category', 'all'],\n    () => getAllCategories(),\n    {\n      retry: 1,\n    },\n  );\n\n  const toggleShowModal = (defaultHistoryData?: DefaultHistoryData) => {\n    if (historyFormClicked) setHistoryFormClicked(false);\n    else {\n      setHistoryFormClicked(true);\n\n      if (!defaultHistoryData) return null;\n      setPickedData({\n        ...defaultHistoryData,\n        accountName: getPaymentEnKeyName(defaultHistoryData.accountName),\n      });\n      const DateArray = new Date(defaultHistoryData?.date)\n        .toLocaleDateString()\n        .split('. ');\n\n      setDateKeystroke({\n        year: +DateArray[0],\n        month: +DateArray[1],\n        day: +DateArray[2],\n      });\n    }\n  };\n\n  const addHistoryClickHandler = () => {\n    setPickedData({\n      type: 'expenditure',\n      categoryName: '식비',\n      accountName: '',\n      label: '',\n      amount: '',\n    });\n    setHistoryFormClicked(!historyFormClicked);\n  };\n\n  const categoryClickHandler = (categoryName: string) => {\n    setPickedData((prev) => ({ ...prev, categoryName }));\n  };\n\n  const cardClickHandler = (e: React.BaseSyntheticEvent) => {\n    setPickedData((prev) => ({\n      ...prev,\n      accountName: e.target.className.split(' ')[2],\n    }));\n    e.currentTarget.scrollIntoView({ behavior: 'smooth', block: 'center' });\n  };\n\n  const deleteBtnHandler = async () => {\n    if (window.confirm('삭제하면 되돌릴 수 없습니다.') === false) return null;\n    try {\n      const { transactionId } = pickedData;\n      if (!transactionId) alert('Error. There is no transactionId ');\n      const { data } = await mutateDeleteAsync(transactionId!);\n      if (!data.ok) alert(data.error);\n      console.log('transaction delete 성공');\n      setHistoryFormClicked(false);\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const numberPatt = /[1-9]/g;\n    // Input Validation\n    if (!numberPatt.test(pickedData.amount))\n      return alert('금액은 숫자로 적어주세요.');\n    if (pickedData.accountName === '')\n      return alert('지출한 카드를 선택해주세요.');\n\n    const {\n      transactionId,\n      label,\n      amount,\n      categoryName,\n      type,\n      accountId,\n      accountName,\n    } = pickedData;\n\n    console.log(label, amount, categoryName, type, accountId, accountName);\n    if (!(label && amount && categoryName && type && accountName))\n      return alert('정보를 전부 입력해주세요.');\n\n    const foundAccount = accountData?.find(\n      (acc) => getPaymentEnKeyName(acc.name) === accountName,\n    );\n\n    const { year, month, day } = dateKeystroke;\n    // Create transaction\n    if (!transactionId) {\n      try {\n        const { data } = await mutateCreateAsync({\n          type,\n          accountId: foundAccount?.id!,\n          content: label,\n          amount,\n          categoryName,\n          date: `${year}-${month}-${day}`,\n        });\n        if (!data.ok) return alert(data.error);\n        console.log('transaction create 성공');\n        setHistoryFormClicked(false);\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      // Update transaction\n      try {\n        const { data } = await mutateUpdateAsync({\n          transactionId,\n          content: label,\n          amount,\n          categoryName,\n          type,\n          createdAt: `${year}-${month}-${day}`,\n          accountId: foundAccount?.id!,\n        });\n        if (!data.ok) return alert(data.error);\n        console.log('transaction update 성공');\n        setHistoryFormClicked(false);\n      } catch (error) {\n        console.log(error);\n        alert(error);\n      }\n    }\n  };\n\n  if (!historyDataByCreatedAt) return null;\n\n  return (\n    <Container>\n      {historyDataByCreatedAt.map((rows, idx) => (\n        <HistoryColumn key={idx} createdAt={rows[0].createdAt}>\n          {rows.map((row) => {\n            if (\n              selectedSumIndicator !== row.type &&\n              selectedSumIndicator !== 'DEFAULT'\n            )\n              return;\n            const type = row.type.toLowerCase() as\n              | 'income'\n              | 'expenditure'\n              | 'receive'\n              | 'send';\n            return (\n              <HistoryRow\n                key={row.id}\n                onClicked={() =>\n                  toggleShowModal({\n                    transactionId: row.id,\n                    type: type,\n                    date: row.createdAt,\n                    categoryName: row.category.name,\n                    categoryId: row.category.id,\n                    accountName: row.account.name,\n                    accountId: row.account.id,\n                    amount: row.amount + '',\n                    label: row.content,\n                  })\n                }\n                type={row.type}\n                content={row.content}\n                amount={row.amount}\n                accountName={row.account.name}\n              />\n            );\n          })}\n        </HistoryColumn>\n      ))}\n      {historyFormClicked && (\n        <Modal isClose={!historyFormClicked} onClose={toggleShowModal}>\n          <HistoryForm onSubmit={submitHandler}>\n            <IconWrapper>\n              <CloseIcon />\n            </IconWrapper>\n\n            <TypePicker>\n              <TypeIndicator\n                className=\"income\"\n                selected={pickedData.type === 'income'}\n                onClick={() =>\n                  setPickedData((prev) => ({ ...prev, type: 'income' }))\n                }\n              >\n                Income\n              </TypeIndicator>\n              <TypeIndicator\n                className=\"expenditure\"\n                selected={pickedData.type === 'expenditure'}\n                onClick={() =>\n                  setPickedData((prev) => ({ ...prev, type: 'expenditure' }))\n                }\n              >\n                Expenditure\n              </TypeIndicator>\n            </TypePicker>\n\n            <DatePicker>\n              <div>\n                <YearInput\n                  onChange={(e) =>\n                    setDateKeystroke((prev) => ({\n                      ...prev,\n                      year: +e.target.value,\n                    }))\n                  }\n                  maxLength={4}\n                  value={dateKeystroke.year}\n                />\n                <MonthInput\n                  onChange={(e) =>\n                    setDateKeystroke((prev) => ({\n                      ...prev,\n                      month: +e.target.value,\n                    }))\n                  }\n                  maxLength={2}\n                  value={dateKeystroke.month}\n                />\n                <DayInput\n                  onChange={(e) =>\n                    setDateKeystroke((prev) => ({\n                      ...prev,\n                      day: +e.target.value,\n                    }))\n                  }\n                  maxLength={2}\n                  value={dateKeystroke.day}\n                />\n              </div>\n            </DatePicker>\n\n            <CategoryPicker>\n              <HistoryCategoryContainer\n                pickedCategory={pickedData.categoryName}\n                pickedType={pickedData.type}\n                onClicked={categoryClickHandler}\n                allCategoryData={categoryData!}\n              />\n            </CategoryPicker>\n\n            <CardPicker>\n              <HistoryCardContainer\n                onClicked={cardClickHandler}\n                pickedCard={pickedData.accountName}\n                allCardData={accountData!}\n              />\n            </CardPicker>\n\n            <InputWrapper>\n              <ContentInput\n                value={pickedData.label}\n                onChange={(e) => {\n                  const keystroke = e.currentTarget?.value;\n                  return setPickedData((prev) => {\n                    return {\n                      ...prev,\n                      label: keystroke,\n                    };\n                  });\n                }}\n                placeholder=\"Label\"\n              />\n              <ContentInput\n                value={pickedData.amount}\n                onChange={(e) => {\n                  const keystroke = e.currentTarget?.value;\n                  return setPickedData((prev) => {\n                    return {\n                      ...prev,\n                      amount: keystroke,\n                    };\n                  });\n                }}\n                placeholder=\"Amount\"\n              />\n            </InputWrapper>\n\n            <SubmitButtonWrapper>\n              <SubmitButton\n                disabled={!pickedData.label || !pickedData.amount}\n                type=\"submit\"\n                value={isUpdating ? 'Updating...' : 'Done'}\n              />\n              {pickedData.transactionId && (\n                <SubmitButton\n                  className=\"delete-btn\"\n                  type=\"button\"\n                  value={isDeleting ? 'Deleting...' : 'Delete'}\n                  onClick={deleteBtnHandler}\n                />\n              )}\n            </SubmitButtonWrapper>\n          </HistoryForm>\n        </Modal>\n      )}\n\n      <FloatingBlock onClick={addHistoryClickHandler}>\n        <FontAwesomeIcon color={'#000'} size=\"2x\" icon={faPlusCircle} />\n        <Text>Add History</Text>\n      </FloatingBlock>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding-bottom: 7.5rem;\n  width: calc(100% - 1.875rem);\n  max-width: 36.75rem;\n  margin: 5.0625rem auto 0;\n`;\n\nconst HistoryForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 155px;\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst CloseIcon = styled.i`\n  color: #f0f0f0;\n  position: relative;\n  top: 15px;\n  right: 15px;\n  width: 36px;\n  height: 36px;\n  font-size: 36px;\n  cursor: pointer;\n`;\n\nconst TypePicker = styled.div`\n  display: flex;\n  width: 100%;\n  height: 55px;\n  margin-top: 80px;\n  padding: 0 50px;\n  .income {\n    margin-right: 10px;\n  }\n`;\n\nconst TypeIndicator = styled.div<{ selected: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  border-radius: 15px;\n  padding: 0 15px;\n  background-color: ${(props) =>\n    props.selected\n      ? props.theme.selectedBgColor\n      : props.theme.unselectedBgColor};\n  color: ${(props) =>\n    props.selected ? props.theme.selectedColor : props.theme.unselectedColor};\n  font-weight: 600;\n  font-size: 25px;\n  line-height: 30px;\n  text-align: center;\n  transition: background-color 0.2s ease, color 0.2s ease;\n  cursor: pointer;\n`;\n\nconst DatePicker = styled.div`\n  width: 194px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  margin-top: 71px;\n  width: var(--width);\n  height: 36px;\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 36px;\n  text-align: center;\n  font-feature-settings: 'tnum' on, 'lnum' on;\n  color: var(--black);\n`;\n\nconst CategoryPicker = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 71px;\n  padding: 0 50px;\n  width: 100%;\n`;\n\nconst CardPicker = styled.div`\n  margin-top: 58px;\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n`;\n\nconst InputWrapper = styled.div`\n  width: 100%;\n  padding: 0 50px;\n  margin-top: 70px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentInput = styled.input`\n  background: transparent;\n  color: ${(props) => props.theme.itemRowColor};\n  background-color: ${(props) => props.theme.itemRowBgColor};\n  border: none;\n  box-sizing: border-box;\n  border-radius: 15px;\n  height: 69px;\n  padding: 19px 38px;\n  outline: none;\n  margin: 15px 0;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 25px;\n  line-height: 30px;\n  font-feature-settings: 'tnum' on, 'lnum' on;\n`;\n\nconst SubmitButtonWrapper = styled.div`\n  width: 100%;\n  margin-top: 4.4375rem;\n  padding: 0 3.125rem;\n  height: 4.1875rem;\n`;\n\nconst SubmitButton = styled.input`\n  width: 100%;\n  height: 100%;\n  border-radius: 15px;\n  border: none;\n  background: #54aafc;\n  outline: none;\n  font-weight: 600;\n  font-size: 25px;\n  line-height: 30px;\n  text-align: center;\n  color: white;\n  cursor: pointer;\n  & + & {\n    margin: 30px 0;\n  }\n  &:disabled {\n    opacity: 0.5;\n  }\n  &.delete-btn {\n    background-color: #ee4337;\n  }\n`;\n\nconst FloatingBlock = styled.div`\n  position: fixed;\n  display: flex;\n  bottom: 43px;\n  left: 50%;\n  transform: translateX(-50%);\n  justify-content: space-between;\n  align-items: center;\n  align-items: center;\n  width: 195px;\n  height: 51px;\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.3);\n  background: #f0f0f0;\n  border-radius: 8514px;\n  padding-left: 4px;\n  cursor: pointer;\n  svg {\n    margin-left: 5px;\n  }\n`;\n\nconst Text = styled.div`\n  text-align: center;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 24px;\n  margin-right: 35px;\n  color: black;\n`;\n\nconst Input = styled.input`\n  background: transparent;\n  border: none;\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 36px;\n  text-align: center;\n  font-feature-settings: 'tnum' on, 'lnum' on;\n  color: ${(props) => props.theme.itemRowColor};\n  outline: none;\n  &:focus {\n    color: #ff7d1f;\n  }\n`;\nconst YearInput = styled(Input)`\n  width: 85px;\n`;\n\nconst MonthInput = styled(Input)`\n  width: 43px;\n`;\n\nconst DayInput = styled(Input)`\n  width: 43px;\n`;\n","import Axios from '../defaultClient';\nimport { FetchHistoryByCreatedAtOutput } from './types.d';\nimport {\n  FetchHistoryData,\n  FetchHistoryInput,\n  FetchHistoryOutput,\n  FetchHistoryByCategoryData,\n  FetchHistoryByCategoryOutput,\n  FetchHistoryByCreatedAtData,\n} from './types';\n\nexport const fetchHistoryAPI = async (\n  fetchHistoryInput: FetchHistoryInput,\n): Promise<FetchHistoryData[] | undefined> => {\n  const { data } = await Axios.get<FetchHistoryOutput>(\n    `/transaction/history?year=${fetchHistoryInput.year}&month=${fetchHistoryInput.month}`,\n  );\n  if (!data.ok) alert(data.error);\n  return data.data;\n};\n\nexport const fetchHistoryByCategoryAPI = async (\n  fetchHistoryInput: FetchHistoryInput,\n): Promise<FetchHistoryByCategoryData[] | undefined> => {\n  const { data } = await Axios.get<FetchHistoryByCategoryOutput>(\n    `/transaction/historyByCategory?year=${fetchHistoryInput.year}&month=${fetchHistoryInput.month}`,\n  );\n  if (!data.ok) {\n    alert(data.error);\n  }\n  return data.data;\n};\n\nexport const fetchHistoryByCreatedAtAPI = async (\n  fetchHistoryInput: FetchHistoryInput,\n): Promise<FetchHistoryByCreatedAtData[][] | undefined> => {\n  const { data } = await Axios.get<FetchHistoryByCreatedAtOutput>(\n    `/transaction/historyByCreatedAt?year=${fetchHistoryInput.year}&month=${fetchHistoryInput.month}`,\n  );\n  if (!data.ok) {\n    alert(data.error);\n  }\n  return data.data;\n};\n","import { fetchHistoryByCategoryAPI } from '../../../lib/api/history';\nimport styled, { keyframes } from 'styled-components';\nimport { Pie } from 'react-chartjs-2';\nimport { useQuery } from 'react-query';\nimport { priceToString } from '../../../lib/helper';\nimport {\n  FetchHistoryByCategoryData,\n  FetchHistoryInput,\n} from '../../../lib/api/types';\n\ninterface Props {\n  selectedDate: FetchHistoryInput;\n}\n\nexport default function CategoryChart({ selectedDate }: Props) {\n  const { data: historyData, isLoading, error } = useQuery<\n    FetchHistoryByCategoryData[] | undefined\n  >(\n    ['historyByCategory', selectedDate],\n    () => fetchHistoryByCategoryAPI(selectedDate),\n    {\n      retry: 1,\n    },\n  );\n\n  const dataForPie = {\n    labels: historyData?.map((el) => el.categoryName),\n    datasets: [\n      {\n        data: historyData?.map((el) => el.amount),\n        backgroundColor: historyData?.map((_, idx) => pieBackgroundColor[idx]),\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  if (!historyData || historyData.length === 0)\n    return <Notification>No expenditures this month</Notification>;\n  if (isLoading) return <Notification>Loading...</Notification>;\n  if (error) return <Notification>Error..</Notification>;\n\n  const totalSum = historyData?.reduce((acc, el) => acc + el.amount, 0);\n  return (\n    <>\n      <PolarCharWrapper>\n        <Pie\n          width={300}\n          height={300}\n          type={'pie'}\n          data={dataForPie}\n          options={{\n            maintainAspectRatio: false,\n          }}\n        />\n      </PolarCharWrapper>\n      <Container>\n        {historyData.map((el) => {\n          console.log(el.amount);\n          return (\n            <Row key={el.categoryName}>\n              <Column className=\"categoryName\">{el.categoryName}</Column>\n              <Column className=\"percent\">{`${(\n                (el.amount / totalSum) *\n                100\n              ).toFixed(2)}%`}</Column>\n              <Column className=\"bar\">\n                <Bar width={`${((el.amount / totalSum) * 100).toFixed(2)}%`} />\n              </Column>\n              <Column className=\"amount\">{priceToString(el.amount)}</Column>\n            </Row>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n\nexport const Notification = styled.span`\n  font-size: 1.25rem;\n  font-weight: 500;\n  display: block;\n  text-align: center;\n  margin-top: 30px;\n`;\n\nconst slide = keyframes`\n    from {\n        transform: translateX(-100%);\n    }\n    to {\n        transform: translateX(0%);\n    }\n`;\n\nconst Bar = styled.div<{ width: string }>`\n  background-color: #ff5959;\n  width: ${(props) => props.width};\n  height: 24px;\n  border-radius: 0.3125rem;\n  animation: ${slide} 0.5s ease forwards;\n  animation-delay: 0.1s;\n  -webkit-animation-delay: 0.1s;\n`;\n\nconst Container = styled.div`\n  margin: 2rem 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  background-color: ${(props) => props.theme.itemRowBgColor};\n  padding: 1.175rem;\n  border-radius: 0.625rem;\n  margin-bottom: 0.9375rem;\n  .categoryName {\n    color: #aaa;\n  }\n  .name {\n    width: 100%;\n    max-width: 4.5rem;\n    text-align: right;\n    font-weight: 500;\n    color: ${(props) => props.theme.itemRowColor};\n  }\n  .percent {\n    width: 100%;\n    max-width: 4.5em;\n    text-align: right;\n    margin-left: 0.625rem;\n    font-weight: 600;\n    font-size: 0.9em;\n  }\n  .bar {\n    width: 100%;\n    margin-left: 0.7em;\n    min-width: 15em;\n    border-radius: 0.3125rem;\n    overflow: hidden;\n  }\n  .amount {\n    color: rgb(238, 67, 55);\n    width: 100%;\n    max-width: 7em;\n    font-weight: 600;\n  }\n  &:nth-child(1) ${Bar} {\n    background: #ff5959;\n    animation-delay: 100ms;\n  }\n  &:nth-child(2) ${Bar} {\n    background: #f98f54;\n    animation-delay: 200ms;\n  }\n  &:nth-child(3) ${Bar} {\n    background: #f0c350;\n    animation-delay: 300ms;\n  }\n  &:nth-child(4) ${Bar} {\n    background: #7bca3d;\n    animation-delay: 400ms;\n  }\n  &:nth-child(5) ${Bar} {\n    background: #56db9b;\n    animation-delay: 500ms;\n  }\n  &:nth-child(6) ${Bar} {\n    background: #2bcfda;\n    animation-delay: 600ms;\n  }\n  &:nth-child(7) ${Bar} {\n    background: #5580ef;\n    animation-delay: 700ms;\n  }\n  &:nth-child(8) ${Bar} {\n    background: #9979f3;\n    animation-delay: 800ms;\n  }\n  &:nth-child(9) ${Bar} {\n    background: #d879f0;\n    animation-delay: 900ms;\n  }\n  &:nth-child(10) ${Bar} {\n    background: #ff5fa2;\n    animation-delay: 1000ms;\n  }\n`;\n\nconst Column = styled.div`\n  width: 100%;\n  max-width: 4.5em;\n  text-align: right;\n  margin-left: 0.625rem;\n  font-weight: 600;\n  font-size: 0.9em;\n  color: #979797;\n`;\n\nconst PolarCharWrapper = styled.div`\n  width: 100%;\n  margin: 0 0 3em;\n`;\n\nconst pieBackgroundColor = [\n  '#FF5959',\n  '#F98F54',\n  '#F0C350',\n  '#7BCA3D',\n  '#56DB9B',\n  '#2BCFDA',\n  '#5580EF',\n  '#9979F3',\n  '#D879F0',\n  '#FF5FA2',\n];\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport MonthSelectorWrapper from '../components/anlytics/MonthSelectorWrapper';\nimport SumIndicatorWrapper from '../components/anlytics/SumIndicatorWrapper';\nimport {\n  FetchHistoryByCreatedAtData,\n  FetchHistoryData,\n  FetchHistoryInput,\n} from '../lib/api/types';\nimport HistoryViewWrapper from '../components/anlytics/history/HistoryViewWrapper';\nimport { useQuery } from 'react-query';\nimport {\n  fetchHistoryAPI,\n  fetchHistoryByCreatedAtAPI,\n} from '../lib/api/history';\nimport { Notification } from '../components/anlytics/chart/CategoryChart';\nimport PageTitle from '../components/PageTitle';\n\nexport enum SumIndicatorType {\n  DEFAULT = 'DEFAULT',\n  INCOME = 'INCOME',\n  EXPENDITURE = 'EXPENDITURE',\n}\n\nexport default function HistoryView() {\n  const [selectedDate, setSelectedDate] = useState<FetchHistoryInput>({\n    year: 2021,\n    month: 7,\n  });\n  const [\n    selectedSumIndicator,\n    setSelectedSumIndicator,\n  ] = useState<SumIndicatorType>(SumIndicatorType.DEFAULT);\n\n  const { data: historyDataByCreatedAt, isLoading, error } = useQuery<\n    FetchHistoryByCreatedAtData[][] | undefined\n  >(\n    ['historyByCreatedAt', selectedDate],\n    () => fetchHistoryByCreatedAtAPI(selectedDate),\n    {\n      retry: 1,\n    },\n  );\n\n  const { data: historyData } = useQuery<FetchHistoryData[] | undefined>(\n    ['history', selectedDate],\n    () => fetchHistoryAPI(selectedDate),\n    {\n      retry: 1,\n    },\n  );\n\n  const MonthIndicatorClickedHandler = (data: FetchHistoryInput) => {\n    console.log('here!! : ', data);\n    setSelectedDate(data);\n  };\n\n  const SumIndicatorClickedHandler = (data: SumIndicatorType) => {\n    setSelectedSumIndicator(data);\n  };\n\n  return (\n    <Container>\n      <PageTitle title=\"Home\" />\n      <MonthSelectorWrapper\n        monthDate={selectedDate.month}\n        onClicked={MonthIndicatorClickedHandler}\n      />\n      <SumIndicatorWrapper\n        historyData={historyData!}\n        selectedSumIndicator={selectedSumIndicator}\n        SumIndicatorClickedHandler={SumIndicatorClickedHandler}\n      />\n      {isLoading && <Notification>Loading...</Notification>}\n      {error && <Notification>Error..</Notification>}\n      {!historyData ? null : (\n        <HistoryViewWrapper\n          historyDataByCreatedAt={historyDataByCreatedAt!}\n          selectedSumIndicator={selectedSumIndicator}\n          selectedDate={selectedDate}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 70px 0px 0px;\n`;\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FetchHistoryData } from '../../lib/api/types';\nimport { priceToString } from '../../lib/helper';\nimport { SumIndicatorType } from '../../pages/HistoryView';\n\ninterface Props {\n  historyData: FetchHistoryData[];\n  selectedSumIndicator: SumIndicatorType;\n  SumIndicatorClickedHandler: (data: SumIndicatorType) => void;\n}\n\ninterface MoneyType {\n  income: number;\n  expenditure: number;\n}\n\nexport default function SumIndicatorWrapper({\n  historyData,\n  selectedSumIndicator,\n  SumIndicatorClickedHandler,\n}: Props) {\n  const [totalMoney, setTotalMoney] = useState<MoneyType>({\n    income: 0,\n    expenditure: 0,\n  });\n\n  useEffect(() => {\n    let income = 0;\n    let expenditure = 0;\n    historyData?.map((el) => {\n      if (el.type === 'INCOME' || el.type === 'RECEIVE') income += el.amount;\n      else expenditure += el.amount;\n    });\n    setTotalMoney({\n      income,\n      expenditure,\n    });\n  }, [historyData]);\n\n  return (\n    <Container>\n      <SumIndicator>\n        <MoneyButtonIncome\n          active={selectedSumIndicator === 'INCOME'}\n          onClick={() =>\n            selectedSumIndicator === 'INCOME'\n              ? SumIndicatorClickedHandler(SumIndicatorType.DEFAULT)\n              : SumIndicatorClickedHandler(SumIndicatorType.INCOME)\n          }\n        >\n          {' '}\n          +{priceToString(totalMoney.income)}{' '}\n        </MoneyButtonIncome>\n        <MoneyButtonExpenditure\n          active={selectedSumIndicator === 'EXPENDITURE'}\n          onClick={() =>\n            selectedSumIndicator === 'EXPENDITURE'\n              ? SumIndicatorClickedHandler(SumIndicatorType.DEFAULT)\n              : SumIndicatorClickedHandler(SumIndicatorType.EXPENDITURE)\n          }\n        >\n          -{priceToString(totalMoney.expenditure)}\n        </MoneyButtonExpenditure>\n      </SumIndicator>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 30px auto;\n  width: calc(100% - 1.875rem);\n  max-width: 36.75rem;\n`;\n\nconst SumIndicator = styled.div`\n  display: flex;\n`;\n\nexport const MoneyButton = styled.div`\n  --webkit-box-flex: 1;\n  flex: auto;\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  -webkit-box-align: center;\n  align-items: center;\n  border-radius: 0.9375rem;\n  height: 3.5rem;\n  line-height: 1.875rem;\n  font-size: 1.5625rem;\n  text-align: center;\n  font-weight: 700;\n  font-feature-settings: 'tnum' on, 'lnum' on;\n  transition: background 0.2s ease;\n  cursor: pointer;\n`;\n\nexport const MoneyButtonIncome = styled(MoneyButton)<{ active?: boolean }>`\n  margin-right: 0.9375rem;\n  border: 0.1rem solid #54aafc;\n  color: ${(props) => (props.active ? '#fff' : '#54aafc')};\n  background-color: ${(props) => (props.active ? '#54aafc' : 'transparent')};\n`;\n\nexport const MoneyButtonExpenditure = styled(MoneyButton)<{ active?: boolean }>`\n  border: 0.1rem solid #ee4337;\n  color: ${(props) => (props.active ? '#fff' : '#ee4337')};\n  background-color: ${(props) =>\n    props.active ? 'rgb(238, 67, 55)' : 'transparent'};\n`;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport NewModal from '../components/UI/NewModal';\nimport SwipeView from '../components/calendar/SwipeView';\nimport CalendarGrid from '../components/calendar/CalendarGrid';\nimport PageTitle from '../components/PageTitle';\nimport {\n  MoneyButtonExpenditure,\n  MoneyButtonIncome,\n} from '../components/anlytics/SumIndicatorWrapper';\n\nconst CalendarTab = () => {\n  const [openModal, setOpenModal] = useState(false);\n\n  //7월로 setting\n  const [index, setIndex] = useState(6);\n\n  //한 달 전으로 이동\n  const changeIndex_minus = () => {\n    setIndex(index - 1);\n  };\n\n  //한 달 후로 이동\n  const changeIndex_plus = () => {\n    setIndex(index + 1);\n  };\n\n  const [income, setIncome] = useState<string[]>([\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n  ]);\n  const [outcome, setOutcome] = useState<string[]>([\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n    '0',\n  ]);\n\n  console.log(index);\n\n  return (\n    <Container>\n      <PageTitle title=\"Calendar\" />\n      {/* Add history  */}\n      {openModal && <NewModal closeModal={setOpenModal} />}\n      <AddBtn onClick={() => setOpenModal(true)}>\n        <PlusIcon icon={faPlus} size=\"2x\" />\n        <Text>Add History</Text>\n      </AddBtn>\n\n      {/* Month Indicator */}\n      <SwipeView\n        index={index}\n        changeIndex_minus={changeIndex_minus}\n        changeIndex_plus={changeIndex_plus}\n      />\n\n      {/* Sum indicator */}\n      <SumIndicatorContainer>\n        <SumIndicatorWrapper>\n          <MoneyButtonIncome>{'+' + income[index]}</MoneyButtonIncome>\n          <MoneyButtonExpenditure>\n            {'-' + outcome[index]}\n          </MoneyButtonExpenditure>\n        </SumIndicatorWrapper>\n      </SumIndicatorContainer>\n\n      {/* Calendar  */}\n      <CalendarGrid\n        index={index}\n        income={income}\n        setIncome={setIncome}\n        outcome={outcome}\n        setOutcome={setOutcome}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin: 70px 0px 0px;\n`;\n\nconst SumIndicatorContainer = styled.div`\n  margin: 30px auto;\n  width: calc(100% - 1.875rem);\n  max-width: 36.75rem;\n`;\n\nconst SumIndicatorWrapper = styled.div`\n  display: flex;\n`;\nconst AddBtn = styled.button`\n  background-color: black;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  bottom: 2.6875rem;\n  width: 12rem;\n  height: 3.1875rem;\n  -webkit-box-shadow: 0 0.25rem 1.875rem rgb(0 0 0 / 30%);\n  box-shadow: 0 0.25rem 1.875rem rgb(0 0 0 / 30%);\n  border-radius: 532.125rem;\n  padding-left: 0.25rem;\n  color: white;\n  justify-content: flex-end;\n  margin: 0 auto;\n  margin-left: 30px;\n  z-index: 5;\n  cursor: pointer;\n`;\n\nconst PlusIcon = styled(FontAwesomeIcon)`\n  height: 30px;\n  font-size: 2.8125rem;\n  border-radius: 50%;\n  vertical-align: baseline;\n  display: inline-block;\n  direction: ltr;\n  text-align: center;\n  text-align: center;\n  margin-left: 12px;\n`;\n\nconst Text = styled.div`\n  width: 110%;\n  text-align: center;\n  font-weight: 700;\n  font-size: 1.25rem;\n  margin-left: 7px;\n  margin-right: 7px;\n`;\n\nconst Box = styled.div`\n  width: 90%;\n  margin: 40px auto;\n  display: flex;\n  box-sizing: border-box;\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nconst BlueBox = styled.div`\n  border: 2.5px solid #166ff3;\n  padding: 5px;\n  flex: 1;\n  width: 45%;\n  margin-left: 27%;\n  margin-right: 1%;\n  border-radius: 15px;\n  text-align: center;\n  color: #166ff3;\n`;\n\nconst RedBox = styled.div`\n  border: 2.5px solid #f8123b;\n  padding: 5px;\n  flex: 1;\n  width: 45%;\n  margin-left: 1%;\n  margin-right: 27%;\n  border-radius: 15px;\n  text-align: center;\n  color: white;\n  background-color: #f8123b;\n`;\n\nexport default CalendarTab;\n","import { useQuery } from 'react-query';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { fetchHistoryAPI } from '../../../lib/api/history';\nimport { Notification } from './CategoryChart';\nimport { FetchHistoryData, FetchHistoryInput } from '../../../lib/api/types';\n\ninterface Props {\n  selectedDate: FetchHistoryInput;\n}\n\nconst DateChart = ({ selectedDate }: Props) => {\n  const { data: historyData, isLoading, error } = useQuery<\n    FetchHistoryData[] | undefined\n  >(['history', selectedDate], () => fetchHistoryAPI(selectedDate), {\n    retry: 1,\n  });\n\n  const dailyArray = [\n    ...Array(new Date(+selectedDate.year, +selectedDate.month, 0).getDate()),\n  ].map((_, i) => i + 1);\n\n  const zeroArr = new Array(dailyArray?.length).fill(0);\n\n  historyData?.map((el) => {\n    if (el.type === 'INCOME' || el.type === 'RECEIVE') return;\n    const idx = new Date(el.createdAt).getDate() - 1;\n    zeroArr[idx] += el.amount;\n  });\n\n  const datas = {\n    labels: dailyArray,\n    datasets: [\n      {\n        label: '이번달 지출',\n        data: zeroArr,\n        borderWidth: 2,\n        radius: 8,\n        borderColor: 'rgb(0, 145, 250)',\n        backgroundColor: 'rgb(0, 145, 250)',\n        pointBorderColor: '#fff',\n      },\n    ],\n  };\n\n  if (\n    !historyData ||\n    historyData?.length === 0 ||\n    zeroArr.reduce((acc, el) => (acc += el), 0) === 0\n  )\n    return <Notification>No expenditures this month</Notification>;\n\n  if (isLoading) return <Notification>Loading...</Notification>;\n  if (error) return <Notification>Error..</Notification>;\n  return (\n    <Container>\n      <Line type={'line'} height={180} data={datas} options={options} />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin: 0 0 10rem;\n`;\n\nexport default DateChart;\n\nconst options: Chart.ChartOptions = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n  tooltips: {\n    titleFontColor: '#fff',\n    titleMarginBottom: 30,\n  },\n};\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport MonthSelectorWrapper from '../components/anlytics/MonthSelectorWrapper';\nimport PageTitle from '../components/PageTitle';\nimport CategoryChart from '../components/anlytics/chart/CategoryChart';\nimport DateChart from '../components/anlytics/chart/DateChart';\nimport { FetchHistoryInput } from '../lib/api/types';\n\nexport default function Analytics() {\n  const [AnalyticsOption, setAnalyticsOption] = useState<string>('category');\n  const [selectedDate, setSelectedDate] = useState<FetchHistoryInput>({\n    year: 2021,\n    month: 7,\n  });\n\n  const MonthIndicatorClickedHandler = (data: FetchHistoryInput) => {\n    setSelectedDate(data);\n  };\n\n  return (\n    <Container>\n      <PageTitle title=\"Analytics\" />\n\n      <MonthSelectorWrapper\n        monthDate={selectedDate.month}\n        onClicked={MonthIndicatorClickedHandler}\n      />\n\n      {/* Option Navigator  */}\n      <Wrapper>\n        <AnalyticsOptions>\n          <AnalyticsOptionBtn\n            onClick={() => setAnalyticsOption('category')}\n            checked={AnalyticsOption === 'category' ? true : false}\n          >\n            By Categories\n          </AnalyticsOptionBtn>\n          <AnalyticsOptionBtn\n            onClick={() => setAnalyticsOption('date')}\n            checked={AnalyticsOption === 'date' ? true : false}\n          >\n            By Dates\n          </AnalyticsOptionBtn>\n        </AnalyticsOptions>\n\n        {/* Chart Container */}\n        {AnalyticsOption === 'category' ? (\n          <CategorySection>\n            <CategoryChart selectedDate={selectedDate!} />\n          </CategorySection>\n        ) : (\n          <DateChart selectedDate={selectedDate!} />\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 70px 0px 0px;\n`;\n\nconst Wrapper = styled.div`\n  width: calc(100% - 1.875rem);\n  max-width: 36.75rem;\n  margin: 30px auto;\n`;\n\nconst AnalyticsOptions = styled.div`\n  width: 100%;\n  justify-content: center;\n  margin-bottom: 3rem;\n  border-radius: 0.625rem;\n  overflow: hidden;\n`;\n\nconst button = styled.button`\n  margin: 0;\n  background: none;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-family: inherit;\n`;\n\nconst AnalyticsOptionBtn = styled(button)<{ checked: boolean }>`\n  flex: 1;\n  width: 50%;\n  font-weight: 600;\n  font-size: 1.25rem;\n  padding: 0.8125rem;\n  color: ${(props) =>\n    props.checked ? props.theme.selectedColor : props.theme.unselectedColor};\n  background-color: ${(props) =>\n    props.checked\n      ? props.theme.selectedBgColor\n      : props.theme.unselectedBgColor};\n  transition: background-color 0.2s ease, color 0.2s ease;\n`;\n\nconst CategorySection = styled.section`\n  margin: 1.5rem 0;\n`;\n","import styled from 'styled-components';\nimport { PortalConsumer } from '../../providers/PortalProvider';\n\ninterface Props {\n  children: React.ReactNode;\n  isClose: boolean;\n  onClose: () => void;\n}\n\nexport default function Backdrop({ children, isClose, onClose }: Props) {\n  return (\n    <PortalConsumer>\n      <BackdropContainer close={isClose} onClick={onClose}>\n        {children}\n      </BackdropContainer>\n    </PortalConsumer>\n  );\n}\n\nconst BackdropContainer = styled.div<{ close: boolean }>`\n  opacity: 1;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: row;\n  overflow-x: hidden;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  background-color: rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(30px) saturate(1.7);\n  opacity: 0;\n  z-index: -1;\n  transition: opacity 500ms ease;\n  will-change: opacity;\n  transition: ${(props) => (props.close ? 'opacity 0.5s' : 'opacity 0.3s')};\n  opacity: ${(props) => (props.close ? 0 : 1)};\n  z-index: ${(props) => (props.close ? -10 : 10)};\n`;\n","import styled from 'styled-components';\n\nexport const PaymentManagerTitle = styled.div`\n  font-size: 60px;\n  font-weight: 700;\n  margin-top: 70px;\n`;\n","import styled from 'styled-components';\n\nexport const PaymentManagerHeader = styled.div`\n  flex: 1;\n  color: #fff;\n  font-family: inherit;\n  padding: 0 50px;\n  margin-bottom: 50px;\n  position: sticky;\n  top: 0;\n  align-self: flex-start;\n`;\n","import styled from 'styled-components';\n\nexport const PaymentManagerCardWrapper = styled.div`\n  margin-top: 25px;\n  margin-right: -25px;\n  transition: transform 300ms ease;\n  position: relative;\n  cursor: pointer;\n  &:hover {\n    transform: translateX(-50px);\n  }\n`;\n\nexport const PaymentManagerCard = styled.div`\n  transform: translateX(0);\n  transition: transform 300ms ease;\n  will-change: transform;\n`;\n","import React, { useState, useEffect } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport styled from 'styled-components';\nimport { priceToString } from '../../lib/helper';\nimport '../calendar/CardSlider.css';\n\nconst left = '<';\nconst right = '>';\n\nconst style = {\n  animation: 'float 2s ease-in-out infinite',\n  border: 'solid black 4px',\n  color: 'white',\n};\n\ninterface Props {\n  accountList: string[];\n  account: string;\n  accountId: string;\n  setAccount: React.Dispatch<React.SetStateAction<string>>;\n  balanceArr: string[];\n}\n\nconst SendCardSlider = ({\n  accountList,\n  account,\n  accountId,\n  setAccount,\n  balanceArr,\n}: Props) => {\n  const [cardIndex, setCardIndex] = useState(+accountId);\n\n  //수정\n  useEffect(() => {\n    setCardIndex(+accountId);\n  }, [accountId]);\n\n  //한 달 전으로 이동\n  const changeIndex_minus = () => {\n    setCardIndex(cardIndex - 1);\n  };\n\n  //한 달 후로 이동\n  const changeIndex_plus = () => {\n    setCardIndex(cardIndex + 1);\n  };\n\n  let cardName: string[] = [];\n  accountList.map((el) => {\n    if (el.includes('신한') || el.includes('shinhan')) {\n      cardName.push('shinhan');\n    } else if (el.includes('삼성') || el.includes('samsung')) {\n      cardName.push('samsung');\n    } else if (el.includes('카카오') || el.includes('kakao')) {\n      cardName.push('kakao');\n    } else if (el.includes('롯데') || el.includes('lotte')) {\n      cardName.push('lotte');\n    } else if (el.includes('우리') || el.includes('woori')) {\n      cardName.push('woori');\n    } else if (el.includes('현금') || el.includes('cash')) {\n      cardName.push('cash');\n    } else if (el.includes('현대') || el.includes('hyundai')) {\n      cardName.push('hyundai');\n    } else if (el.includes('비씨') || el.includes('bc')) {\n      cardName.push('bc');\n    } else {\n      cardName.push('default');\n    }\n  });\n\n  return (\n    <SwipeableViews\n      enableMouseEvents\n      index={cardIndex}\n      disabled={Boolean(true)} //swipe 불가\n    >\n      {accountList.map((el, i) => (\n        <>\n          <div className=\"contain\">\n            {i >= 1 ? (\n              <Button onClick={changeIndex_minus}>{left}</Button>\n            ) : null}\n            <button\n              className={`card0 ${cardName[i] + '0'}`}\n              style={el === account ? style : undefined}\n              onClick={() => setAccount(el)}\n            >\n              {el}\n            </button>\n            {i < accountList.length - 1 ? (\n              <Button onClick={changeIndex_plus}>{right}</Button>\n            ) : null}\n          </div>\n          <div className=\"balance\">\n            {' '}\n            잔액 : {priceToString(+balanceArr[i])}원\n          </div>\n        </>\n      ))}\n    </SwipeableViews>\n  );\n};\n\nconst Button = styled.button`\n  border: none;\n  background-color: inherit;\n  color: black;\n  font-size: 45px;\n  cursor: pointer;\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nexport default SendCardSlider;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Axios from '../../lib/defaultClient';\n\ninterface Props {\n  accountId: number;\n  setSend: React.Dispatch<React.SetStateAction<boolean>>;\n  amount: string;\n  label: string;\n  receiver: string;\n  category: string;\n  date: string;\n  setOpenTransfer: React.Dispatch<React.SetStateAction<boolean>>;\n  setCardListClicked: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Send = ({\n  accountId,\n  setSend,\n  amount,\n  label,\n  receiver,\n  category,\n  date,\n  setOpenTransfer,\n  setCardListClicked,\n}: Props) => {\n  useQuery('send', async () => {\n    const response = await Axios.post(`/transaction/send/${accountId}`, {\n      amount: amount,\n      categoryName: category,\n      accountSubId: receiver,\n      content: label,\n      date: date,\n    });\n\n    if (!response.data.ok) {\n      alert('Out of balance!');\n    }\n    return response;\n  });\n\n  setSend(false);\n  setOpenTransfer(false);\n  // setCardListClicked(false);\n  return <div></div>;\n};\n\nexport default Send;\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './Transfer.css';\nimport GetAllAccount from '../query/GetAllAccount';\nimport GetAllCategories from '../query/GetAllCategories';\nimport SendCardSlider from './SendCardSlider';\nimport Send from '../query/Send';\nimport { GetAllAccountData, GetAllCategoriesData } from '../../lib/api/types';\n\nconst modalBackground = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\nconst style = {\n  background: '#333333',\n  color: 'white',\n};\n\ninterface Props {\n  setCardListClicked: React.Dispatch<React.SetStateAction<boolean>>;\n  selectedCardName: string;\n  setShowSendTransaction: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Transfer = ({\n  setCardListClicked,\n  selectedCardName,\n  setShowSendTransaction,\n}: Props) => {\n  const [getAllAccountData, setGetAllAccountData] = useState<\n    GetAllAccountData[]\n  >([]);\n  const [getAllCategoriesData, setGetAllCategoriesData] = useState<\n    GetAllCategoriesData[]\n  >([]);\n\n  //변수 지정\n  const [incomeCategoryList, setIncomeCategoryList] = useState<string[]>([]);\n  const [outcomeCategoryList, setOutcomeCategoryList] = useState<string[]>([]);\n  const [categoryList, setCategoryList] = useState<string[]>([]);\n  const [category, setCategory] = useState('');\n  const [accountList, setAccountList] = useState<string[]>([]);\n  const [account, setAccount] = useState('');\n  const [label, setLabel] = useState('');\n  const [amount, setAmount] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const [accountId, setAccountId] = useState(0);\n  const [send, setSend] = useState(false);\n  const [balance, setBalance] = useState<string[]>([]);\n\n  const date = new Date().toLocaleString().slice(0, 11);\n\n  let tmpBalance: string[] = [];\n\n  let cardName: string[] = [];\n  accountList.map((el) => {\n    if (el.includes('신한') || el.includes('shinhan')) {\n      cardName.push('shinhan');\n    } else if (el.includes('삼성') || el.includes('samsung')) {\n      cardName.push('samsung');\n    } else if (el.includes('카카오') || el.includes('kakao')) {\n      cardName.push('kakao');\n    } else if (el.includes('롯데') || el.includes('lotte')) {\n      cardName.push('lotte');\n    } else if (el.includes('우리') || el.includes('woori')) {\n      cardName.push('woori');\n    } else if (el.includes('현금') || el.includes('cash')) {\n      cardName.push('cash');\n    } else if (el.includes('현대') || el.includes('hyundai')) {\n      cardName.push('hyundai');\n    } else if (el.includes('비씨') || el.includes('bc')) {\n      cardName.push('bc');\n    } else {\n      cardName.push('default');\n    }\n  });\n\n  useEffect(() => {\n    setCategoryList(outcomeCategoryList);\n  }, [outcomeCategoryList]);\n\n  useEffect(() => {\n    cardName.map((el, i) => {\n      if (el === selectedCardName) {\n        setAccountId(i);\n      }\n    });\n  }, [getAllAccountData]);\n\n  useEffect(() => {\n    getAllAccountData?.map((el) => {\n      tmpBalance.push(el.balance + '');\n    });\n    setBalance(tmpBalance);\n  }, [getAllAccountData]);\n\n  const validateForm = () => {\n    if (!category) {\n      alert(\"Please check 'Category'.\");\n      return false;\n    }\n    if (!account) {\n      alert(\"Please check 'Account'.\");\n      return false;\n    }\n    if (!receiver) {\n      alert(\"Please check 'Receiver'.\");\n      return false;\n    }\n    if (!label) {\n      alert(\"Please check 'Label'.\");\n      return false;\n    }\n    if (!amount) {\n      alert(\"Please check 'Amount'.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    //accountId 구하기\n    getAllAccountData.map((el) => {\n      if (el.name === account) {\n        setAccountId(el.id);\n      }\n    });\n\n    setSend(true);\n  };\n\n  const clickHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div>\n      <AnimatePresence exitBeforeEnter>\n        <motion.div\n          className=\"transferModalBackground\"\n          variants={modalBackground}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <GetAllAccount\n            setAccountList={setAccountList}\n            setGetAllAccountData={setGetAllAccountData}\n          />\n\n          <GetAllCategories\n            setIncomeCategoryList={setIncomeCategoryList}\n            setOutcomeCategoryList={setOutcomeCategoryList}\n            setCategoryList={setCategoryList}\n            setGetAllCategoriesData={setGetAllCategoriesData}\n          />\n          <div onClick={clickHandler} className=\"transferModalContainer\">\n            <div className=\"header\">\n              <div className=\"title\">\n                <h2>Remittance</h2>\n              </div>\n              <div className=\"titleCloseBtn\">\n                <button onClick={() => setShowSendTransaction(false)}>X</button>\n              </div>\n            </div>\n            <div className=\"body\">\n              <div className=\"date\">{date}</div>\n              <div className=\"category\">\n                {categoryList.map((el) => {\n                  return (\n                    <button\n                      style={category === el ? style : undefined}\n                      onClick={() => setCategory(el)}\n                    >\n                      {el}\n                    </button>\n                  );\n                })}\n              </div>\n              <div className=\"cardType\">\n                <SendCardSlider\n                  accountList={accountList}\n                  account={account}\n                  setAccount={setAccount}\n                  accountId={accountId + ''}\n                  balanceArr={balance}\n                />\n              </div>\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Receiver\"\n                value={receiver}\n                onChange={(e) => setReceiver(e.target.value)}\n              />\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Label\"\n                value={label}\n                onChange={(e) => setLabel(e.target.value)}\n              />\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Amount\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n              />\n            </div>\n            <div className=\"footer\">\n              <button onClick={onSubmit} id=\"sendBtn\">\n                Send\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      </AnimatePresence>\n\n      {send ? (\n        <Send\n          accountId={accountId}\n          setSend={setSend}\n          amount={amount}\n          label={label}\n          receiver={receiver}\n          category={category}\n          date={date}\n          setOpenTransfer={setShowSendTransaction}\n          setCardListClicked={setCardListClicked}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Transfer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './ReceiveModal.css';\nimport { useMutation } from 'react-query';\nimport { GetPendingTransactionData } from '../../lib/api/types.d';\nimport { ReceivePendingTransactionAPI } from '../../lib/api/transaction';\nimport { priceToString } from '../../lib/helper';\n\nconst modalBackground = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\ninterface Props {\n  setHasPendingTransaction: React.Dispatch<React.SetStateAction<boolean>>;\n  getPendingData?: GetPendingTransactionData | undefined;\n}\n\nconst ReceiveModal = ({ setHasPendingTransaction, getPendingData }: Props) => {\n  const { mutateAsync, isLoading } = useMutation(ReceivePendingTransactionAPI);\n\n  const onReceive = async (transactionId: number) => {\n    try {\n      const { data } = await mutateAsync({\n        transactionId: transactionId + '',\n        reply: 'RECEIVE',\n      });\n      if (!data.ok) alert(data.error);\n      console.log('receive 성공!');\n      setHasPendingTransaction(false);\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const onDeny = async (transactionId: number) => {\n    if (\n      !window.confirm(\n        '거절하면 돈은 허공으로 날아갑니다. 정말로 거절하시겠습니까?',\n      )\n    )\n      return null;\n    try {\n      const { data } = await mutateAsync({\n        transactionId: transactionId + '',\n        reply: 'DENY',\n      });\n      if (!data.ok) alert(data.error);\n      console.log('deny 성공!');\n      setHasPendingTransaction(false);\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  if (!getPendingData) return null;\n\n  return (\n    <div>\n      <AnimatePresence exitBeforeEnter>\n        <motion.div\n          className=\"receiveModalBackground\"\n          variants={modalBackground}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <PendingTransactionContainer>\n            <Title className=\"card kakao\">아껴써라</Title>\n            <Row>보낸 사람 : {getPendingData?.user?.name}</Row>\n            <Row>금액 : {priceToString(getPendingData?.amount)}</Row>\n            <Row>날짜 : {getPendingData?.createdAt?.slice(0, 10)}</Row>\n            <Row>메세지 : {getPendingData?.content}</Row>\n            <Message>봉투가 도착했어요.</Message>\n            <ReceiveBtn onClick={() => onReceive(getPendingData?.id)}>\n              {isLoading ? '받는중... ' : '받기'}\n            </ReceiveBtn>\n            <ReceiveBtn onClick={() => onDeny(getPendingData?.id)}>\n              {isLoading ? '거절중...' : '거절하기'}\n            </ReceiveBtn>\n          </PendingTransactionContainer>\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst PendingTransactionContainer = styled.div`\n  width: 400px;\n  height: 550px;\n  border-radius: 10px;\n  background-color: #eee;\n  padding: 20px;\n`;\n\nconst Row = styled.div`\n  margin: 20px 0;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: radial-gradient(\n    circle at 0% 0%,\n    var(--start, #fff),\n    var(--end, #e0e0e3)\n  );\n  --name-color-white: rgba(255, 255, 255, 0.5);\n  width: 350px;\n  height: 150px;\n  border-radius: 10px;\n  font-family: cursive;\n  margin: 0px auto;\n  font-weight: 800;\n  font-size: 44px;\n`;\n\nconst Message = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 600;\n  padding: 10px;\n`;\n\nconst ReceiveBtn = styled.button`\n  padding: 10px;\n  width: 100%;\n  height: 50px;\n  border-radius: 15px;\n  border: none;\n  background: #54aafc;\n  outline: none;\n  font-weight: 600;\n  font-size: 25px;\n  line-height: 30px;\n  text-align: center;\n  margin-top: 20px;\n  color: white;\n\n  & + & {\n    margin-top: 20px;\n    background-color: #ee4337;\n  }\n  cursor: pointer;\n`;\n\nexport default ReceiveModal;\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PageTitle from '../components/PageTitle';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport routes from '../routes';\nimport Calendar from './Calendar';\nimport Analytics from './Analytics';\nimport HistoryView from './HistoryView';\nimport Confetti from 'react-confetti';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faCalendar,\n  faChartBar,\n  faCreditCard,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faSun, faMoon } from '@fortawesome/free-regular-svg-icons';\nimport Backdrop from '../components/UI/Backdrop';\nimport { PaymentManagerTitle } from '../components/anlytics/payment/PaymentManagerTitle';\nimport { PaymentManagerHeader } from '../components/anlytics/payment/PaymentManagerHeader';\nimport {\n  PaymentManagerCard,\n  PaymentManagerCardWrapper,\n} from '../components/anlytics/payment/PaymentManagerCardWrapper';\nimport Transfer from '../components/UI/TransferModal';\nimport ReceiveModal from '../components/UI/ReceiveModal';\nimport { getPendingTransactionAPI } from '../lib/api/transaction';\nimport { useQuery } from 'react-query';\n\ninterface Props {\n  darkModeInput: [boolean, () => void];\n}\n\nexport default function Home({ darkModeInput }: Props) {\n  const [cardListClicked, setCardListClicked] = useState(false);\n  const [selectedCardName, setSelectedCardName] = useState('');\n  const [showSendTransaction, setShowSendTransaction] = useState(false);\n\n  const [hasPendingTransaction, setHasPendingTransaction] = useState(false);\n\n  const { data: getPendingData } = useQuery(\n    'getPending',\n    getPendingTransactionAPI,\n    {\n      retry: false,\n    },\n  );\n\n  useEffect(() => {\n    if (!getPendingData) setHasPendingTransaction(true);\n  }, [getPendingData]);\n\n  const toggleCardListView = () => {\n    console.log('backdrop clicked');\n    setCardListClicked((prev) => !prev);\n  };\n\n  const sendTransactionHandler = (cardName: string) => {\n    setSelectedCardName(cardName);\n    setShowSendTransaction(true);\n  };\n\n  const PaymentManagerClickHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <Container>\n      <PageTitle title=\"Home\" />\n      <Navigation>\n        <DarkModeBtn onClick={darkModeInput[1]}>\n          <FontAwesomeIcon\n            color={darkModeInput[0] ? 'white' : 'black'}\n            icon={darkModeInput[0] ? faSun : faMoon}\n            size=\"2x\"\n          />\n        </DarkModeBtn>\n        <Divider>\n          <Line />\n        </Divider>\n        <Link to={routes.home}>\n          <FontAwesomeIcon\n            color={darkModeInput[0] ? 'white' : 'black'}\n            size=\"2x\"\n            icon={faClock}\n          />\n        </Link>\n        <Link to={routes.calendar}>\n          <FontAwesomeIcon\n            color={darkModeInput[0] ? 'white' : 'black'}\n            size=\"2x\"\n            icon={faCalendar}\n          />\n        </Link>\n        <Link to={routes.analytics}>\n          <FontAwesomeIcon\n            color={darkModeInput[0] ? 'white' : 'black'}\n            size=\"2x\"\n            icon={faChartBar}\n          />\n        </Link>\n        <Divider>\n          <Line />\n        </Divider>\n        <CardListButton onClick={toggleCardListView}>\n          <FontAwesomeIcon\n            color={darkModeInput[0] ? 'white' : 'black'}\n            size=\"2x\"\n            icon={faCreditCard}\n          />\n        </CardListButton>\n      </Navigation>\n\n      {hasPendingTransaction ? (\n        <ReceiveModal\n          getPendingData={getPendingData}\n          setHasPendingTransaction={setHasPendingTransaction}\n        />\n      ) : (\n        getPendingData && (\n          <Confetti\n            friction={0.99}\n            gravity={0.3}\n            numberOfPieces={300}\n            recycle={false}\n          />\n        )\n      )}\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <HistoryView />\n        </Route>\n        <Route path={routes.calendar}>\n          <Calendar />\n        </Route>\n        <Route path={routes.analytics}>\n          <Analytics />\n        </Route>\n      </Switch>\n\n      <Backdrop isClose={!cardListClicked} onClose={toggleCardListView}>\n        <PaymentManagerHeader>\n          <PaymentManagerTitle>Manage your payments</PaymentManagerTitle>\n          {/* <PaymentManagerAddButton>\n            + Add Payment Method\n          </PaymentManagerAddButton> */}\n        </PaymentManagerHeader>\n\n        <PaymentManagerCardContainer onClick={PaymentManagerClickHandler}>\n          {showSendTransaction && (\n            <Transfer\n              setCardListClicked={setCardListClicked}\n              selectedCardName={selectedCardName}\n              setShowSendTransaction={setShowSendTransaction}\n            />\n          )}\n          <PaymentManagerCardWrapper>\n            <PaymentManagerCard\n              onClick={() => sendTransactionHandler('shinhan')}\n              className={`card shinhan`}\n            />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('samsung')}\n          >\n            <PaymentManagerCard className=\"card samsung\" />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('lotte')}\n          >\n            <PaymentManagerCard className=\"card lotte\" />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('kakao')}\n          >\n            <PaymentManagerCard className=\"card kakao\" />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('cash')}\n          >\n            <PaymentManagerCard className={`card cash`} />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('woori')}\n          >\n            <PaymentManagerCard className=\"card woori\" />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('hyundai')}\n          >\n            <PaymentManagerCard className=\"card hyundai\" />\n          </PaymentManagerCardWrapper>\n          <PaymentManagerCardWrapper\n            onClick={() => sendTransactionHandler('bc')}\n          >\n            <PaymentManagerCard className=\"card bc\" />\n          </PaymentManagerCardWrapper>\n        </PaymentManagerCardContainer>\n      </Backdrop>\n      {/* Router  */}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background-image: ${(props) => props.theme.backgroundImage};\n  background-attachment: ${(props) => props.theme.backgroundAttachment};\n`;\n\nconst Navigation = styled.nav`\n  padding-top: 45px;\n  margin: 0 auto 40px;\n  display: flex;\n  justify-content: space-around;\n  height: 47px;\n  width: calc(100% - 30px);\n  max-width: 588px;\n  svg {\n    margin: 0 20px;\n  }\n`;\n\nconst Divider = styled.div`\n  flex: 1;\n  display: grid;\n  place-items: center;\n`;\nconst Line = styled.div`\n  height: 40px;\n  width: 1px;\n  background-color: ${(props) => props.theme.itemRowColor};\n`;\n\nconst DarkModeBtn = styled.span`\n  cursor: pointer;\n`;\n\nconst CardListButton = styled.div`\n  cursor: pointer;\n`;\n\nconst PaymentManagerCardContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  z-index: 999;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faMoon } from '@fortawesome/free-regular-svg-icons';\n\ninterface Props {\n  children: React.ReactNode;\n  darkModeInput: [boolean, () => void];\n}\n\nexport default function AuthLayout({ children, darkModeInput }: Props) {\n  return (\n    <Container>\n      <Wrapper>{children}</Wrapper>\n      <Footer>\n        <DarkModeBtn onClick={darkModeInput[1]}>\n          <FontAwesomeIcon\n            color={darkModeInput[0] ? 'white' : 'dark'}\n            icon={darkModeInput[0] ? faSun : faMoon}\n            size=\"2x\"\n          />\n        </DarkModeBtn>\n      </Footer>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst Wrapper = styled.div`\n  max-width: 350px;\n  width: 100%;\n`;\n\nconst Footer = styled.footer`\n  margin-top: 20px;\n`;\n\nconst DarkModeBtn = styled.span`\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const BaseBox = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n  border: 1px solid ${(props) => props.theme.borderColor};\n`;\n\nexport const FatText = styled.span`\n  font-weight: 600;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseBox } from '../shared';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst SFormBox = styled(BaseBox)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 35px 40px 25px 40px;\n  margin: 0 0 10px;\n  background-color: ${props => props.theme.bgColor};\n  form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 22px 0px 12px;\n    width: 100%;\n  }\n  h1 {\n    font-size: 42px;\n    font-weight: 800;\n    font-family: cursive;\n    margin: 10px 0px 30px;\n  }\n  h2 {\n    color: #8e8e8e;\n    font-weight: 600;\n    font-size: 17px;\n    text-align: center;\n    margin-bottom: 10px;\n  }\n`;\n\nexport default function FormBox({ children }: Props) {\n  return <SFormBox>{children}</SFormBox>;\n}\n","import { InputHTMLAttributes, forwardRef, Ref } from 'react';\nimport styled from 'styled-components';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  hasError?: boolean;\n}\n\nconst SInput = styled.input<Props>`\n  background-color: ${props => props.theme.bgColor};\n  padding: 7px 10px;\n  border-radius: 3px;\n  border: 0.5px solid\n    ${(props) => (props.hasError ? props.theme.errorMsgColor : props.theme.borderColor)};\n  width: 100%;\n  box-sizing: border-box;\n  margin: 5px 0;\n  &::placeholder {\n    font-size: 12px;\n  }\n  &:focus {\n    border-color: rgb(38, 38, 38);\n  } \n`;\n\nconst Input = forwardRef((props: Props, ref: Ref<HTMLInputElement>) => {\n  return <SInput ref={ref} {...props} />;\n});\n\nexport default Input;\n","import { ButtonHTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {}\n\nconst SButton = styled.button<Props>`\n  width: 100%;\n  border: none;\n  color: #fff;\n  margin-top: 15px;\n  background-color: ${(props) => props.theme.accent};\n  padding: 8px 0;\n  font-weight: 600;\n  border-radius: 3px;\n  opacity: ${props => props.disabled ? .3 : 1};\n  cursor: pointer;\n  svg {\n    margin-right: 10px;\n    font-size: 16px;\n  }\n  &:focus {\n      outline: none;\n  }\n`;\n\nexport default SButton;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst SSeparator = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 20px 0px 30px;\n    width: 100%;\n    div {\n        width: 100%;\n        height: 1px;\n        background-color: ${props => props.theme.borderColor};\n    }\n    span {\n        margin: 0 10px;\n        font-weight: 600;\n        font-size: 12px;\n        color: #8e8e8e;\n        word-break: keep-all;\n    }\n`;\n\nexport default function Separator () {\n  return (\n    <SSeparator>\n      <div></div>\n      <span>또는</span>\n      <div></div>\n    </SSeparator>\n  );\n}\n","import styled from 'styled-components';\nimport { BaseBox } from '../shared';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  title: string;\n  description: string;\n  link: string;\n}\n\nexport default function BottomBox({ title, description, link }: Props) {\n  return (\n    <SBottomBox>\n      <span>{description}</span>\n      <Link to={link}>{title}</Link>\n    </SBottomBox>\n  );\n}\n\nconst SBottomBox = styled(BaseBox)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 24px 0;\n  background-color: ${props => props.theme.bgColor};\n  span {\n    color: ${props => props.theme.color};\n    margin-right: 5px;\n  }\n  a {\n    color: ${(props) => props.theme.accent};\n    font-weight: 600;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SFormError = styled.span`\n  color: ${props => props.theme.errorMsgColor};\n  font-size: 12px;\n  font-weight: 600;\n  margin: 3px;\n`;\n\nexport default function FormError({ message }: { message?: string }) {\n  if (!message) return null;\n  return <SFormError>{message}</SFormError>;\n}","import { CoreOutput } from '../CoreOutput';\nimport Axios from '../defaultClient';\nimport { CreateUserInput, LoginUserInput, LoginUserOutput } from './types';\n\nexport const createUserAPI = async (createUserInput: CreateUserInput) => {\n  return Axios.post<CoreOutput>('/user/join', {\n    ...createUserInput,\n  });\n};\n\nexport const loginUserAPI = async (loginUserInput: LoginUserInput) => {\n  return Axios.post<LoginUserOutput>('/auth/login', {\n    ...loginUserInput,\n  });\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport AuthLayout from '../components/auth/AuthLayout';\nimport FormBox from '../components/auth/FormBox';\nimport Input from '../components/auth/Input';\nimport Button from '../components/auth/Button';\nimport Separator from '../components/auth/Separator';\nimport BottomBox from '../components/auth/BottomBox';\nimport FormError, { SFormError } from '../components/auth/FormError';\nimport PageTitle from '../components/PageTitle';\nimport routes from '../routes';\nimport { useLocation } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport { loginUserAPI } from '../lib/api/auth';\n\ninterface LoginFormField {\n  email: string;\n  password: string;\n  result: string;\n}\n\ninterface LocationState {\n  email: string;\n  password: string;\n  message: string;\n}\n\ninterface Props {\n  darkModeInput: [boolean, () => void];\n  useAuthHookInput: [boolean, (token: string | undefined) => void];\n}\n\nexport default function Login({ darkModeInput, useAuthHookInput }: Props) {\n  const location = useLocation<LocationState>();\n  const [reqErrorMessage, setReqErrorMessage] = useState<string>('');\n  const { mutateAsync, isLoading } = useMutation(loginUserAPI);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<LoginFormField>({\n    mode: 'onChange',\n    defaultValues: {\n      email: location?.state?.email || '',\n      password: location?.state?.password || '',\n    },\n  });\n\n  const onSubmitValid = async (data: LoginFormField) => {\n    if (isLoading) return null;\n    console.log(data);\n    const { email, password } = data;\n    try {\n      const res = await mutateAsync({\n        email,\n        password,\n      });\n      if (res.data.ok) {\n        useAuthHookInput[1](res.data.token);\n      } else {\n        setReqErrorMessage(res.data.error!);\n      }\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  return (\n    <AuthLayout darkModeInput={darkModeInput}>\n      <PageTitle title=\"Login\" />\n      <FormBox>\n        <Title>금융 앱</Title>\n        <Notification>{location?.state?.message}</Notification>\n        <form onSubmit={handleSubmit(onSubmitValid)}>\n          <Input\n            {...register('email', {\n              required: {\n                value: true,\n                message: '이메일은 필수입니다.',\n              },\n            })}\n            type=\"text\"\n            placeholder=\"이메일\"\n            hasError={Boolean(errors?.email)}\n          />\n          <FormError message={errors?.email?.message} />\n          <Input\n            {...register('password', {\n              required: {\n                value: true,\n                message: '비밀번호는 필수입니다.',\n              },\n              minLength: {\n                value: 5,\n                message: '비밀번호는 5자리 이상으로 설정해주세요.',\n              },\n            })}\n            type=\"password\"\n            placeholder=\"비밀번호\"\n            hasError={Boolean(errors?.password)}\n          />\n          <FormError message={errors?.password?.message} />\n          <Button\n            disabled={!isValid && !Boolean(errors.result?.message)}\n            type=\"submit\"\n          >\n            {isLoading ? '로그인 중 ...' : '로그인'}\n          </Button>\n        </form>\n        <Separator />\n        <ErrorMessage>{reqErrorMessage}</ErrorMessage>\n      </FormBox>\n\n      <BottomBox\n        title=\"가입하기\"\n        description=\"계정이 없으신가요?\"\n        link={routes.signUp}\n      />\n    </AuthLayout>\n  );\n}\n\nconst Notification = styled.div`\n  color: #2ecc71;\n`;\n\nexport const ErrorMessage = styled(SFormError)`\n  font-size: 15px;\n  margin: 0px 0px 20px;\n`;\n\nexport const Title = styled.h1`\n  color: ${(props) => props.theme.color};\n`;\n","import { useMutation } from 'react-query';\nimport AuthLayout from '../components/auth/AuthLayout';\nimport PageTitle from '../components/PageTitle';\nimport FormBox from '../components/auth/FormBox';\nimport Input from '../components/auth/Input';\nimport Button from '../components/auth/Button';\nimport Separator from '../components/auth/Separator';\nimport BottomBox from '../components/auth/BottomBox';\nimport routes from '../routes';\nimport FormError from '../components/auth/FormError';\nimport { useForm } from 'react-hook-form';\nimport { Title } from './Login';\nimport { useHistory } from 'react-router-dom';\nimport { createUserAPI } from '../lib/api/auth';\n\ninterface SignUpFormField {\n  email: string;\n  name: string;\n  password: string;\n}\n\ninterface Props {\n  darkModeInput: [boolean, () => void];\n}\n\nexport default function SignUp({ darkModeInput }: Props) {\n  const history = useHistory();\n  const { mutateAsync, isLoading } = useMutation(createUserAPI);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<SignUpFormField>({\n    mode: 'onChange',\n  });\n\n  const onSubmitValid = async (data: SignUpFormField) => {\n    if (isLoading) return;\n    console.log(data);\n    const { email, name, password } = data;\n    try {\n      const res = await mutateAsync({\n        email,\n        name,\n        password,\n      });\n      console.log(res);\n      if (res.data.ok) {\n        history.push(routes.home, {\n          message: '계정이 생성되었습니다. 로그인 해주세요.',\n          email,\n          password,\n        });\n      } else {\n        alert(res.data.error);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return (\n    <AuthLayout darkModeInput={darkModeInput}>\n      <PageTitle title=\"Sign up\" />\n      <FormBox>\n        <Title>금융 앱</Title>\n        <h2>나의 돈을 시각화, 직관화!</h2>\n        <Separator />\n        <form onSubmit={handleSubmit(onSubmitValid)}>\n          <Input\n            {...register('email', {\n              required: {\n                value: true,\n                message: '이메일은 필수입니다.',\n              },\n              minLength: {\n                value: 5,\n                message: '이메일을 5자리 이상으로 설정해주세요.',\n              },\n            })}\n            type=\"text\"\n            placeholder=\"이메일 주소\u001b\"\n            hasError={Boolean(errors?.email)}\n          />\n          <FormError message={errors?.email?.message} />\n          <Input\n            {...register('name', {\n              required: {\n                value: true,\n                message: '성명은 필수입니다.',\n              },\n            })}\n            type=\"text\"\n            placeholder=\"성명\"\n            hasError={Boolean(errors?.name)}\n          />\n          <FormError message={errors?.name?.message} />\n          <Input\n            {...register('password', {\n              required: {\n                value: true,\n                message: '비밀번호는 필수입니다.',\n              },\n              minLength: {\n                value: 5,\n                message: '비밀번호를 5자리 이상으로 설정해주세요.',\n              },\n            })}\n            type=\"password\"\n            placeholder=\"비밀번호\u001b\"\n            hasError={Boolean(errors?.password)}\n          />\n          <FormError message={errors?.password?.message} />\n          <Button disabled={!isValid} type=\"submit\">\n            가입\n          </Button>\n          {isLoading && <p>로딩중..</p>}\n        </form>\n      </FormBox>\n      <BottomBox\n        title=\"계정이 있으신가요?\"\n        description=\"로그인\"\n        link={routes.home}\n      />\n    </AuthLayout>\n  );\n}\n","import PageTitle from '../components/PageTitle';\n\nexport default function NotFound() {\n  return (\n    <div>\n      <PageTitle title=\"Not found\" />\n      <h1>404 Not Found.</h1>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nexport const TOKEN = 'TOKEN';\n\nexport default function useAuth(): [\n  boolean,\n  (token: string | undefined) => void,\n] {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(\n    Boolean(localStorage.getItem(TOKEN)),\n  );\n\n  const toggleLogInOut = (token: string | undefined) => {\n    if (isLoggedIn) {\n      localStorage.removeItem(TOKEN);\n      setIsLoggedIn(false);\n    } else {\n      if (!token) return;\n      localStorage.setItem(TOKEN, token);\n      setIsLoggedIn(true);\n    }\n  };\n\n  return [isLoggedIn, toggleLogInOut];\n}\n","import { useEffect, useState } from 'react';\n\nconst DARK_MODE = 'DARK_MODE';\n\nexport default function useDarkMode(): [boolean, () => void] {\n  const [isDark, setIsDark] = useState<boolean>(\n    Boolean(localStorage.getItem(DARK_MODE)),\n  );\n\n  const toggleDarkMode = () => {\n    if (isDark) {\n      localStorage.removeItem(DARK_MODE);\n      setIsDark(false);\n    } else {\n      localStorage.setItem(DARK_MODE, 'enabled');\n      setIsDark(true);\n    }\n  };\n\n  return [isDark, toggleDarkMode];\n}\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { darkTheme, GlobalStyles, lightTheme } from './styles/styles';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport routes from './routes';\nimport NotFound from './pages/NotFound';\nimport { ThemeProvider } from 'styled-components';\nimport useAuth from './hooks/useLogin';\nimport useDarkMode from './hooks/useDarkmode';\nimport { PortalProvider } from './providers/PortalProvider';\n\nfunction App() {\n  const [isDarkTheme, toggleDarkMode] = useDarkMode();\n  const [isLoggedIn, toggleLogInOut] = useAuth();\n\n  return (\n    <PortalProvider>\n      <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n        <HelmetProvider>\n          <GlobalStyles />\n          <Switch>\n            {!isLoggedIn ? (\n              <Route path={routes.signUp}>\n                <SignUp darkModeInput={[isDarkTheme, toggleDarkMode]} />\n              </Route>\n            ) : null}\n\n            <Route path={routes.home}>\n              {isLoggedIn ? (\n                <Home darkModeInput={[isDarkTheme, toggleDarkMode]} />\n              ) : (\n                <Login\n                  useAuthHookInput={[isLoggedIn, toggleLogInOut]}\n                  darkModeInput={[isDarkTheme, toggleDarkMode]}\n                />\n              )}\n            </Route>\n\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </HelmetProvider>\n      </ThemeProvider>\n    </PortalProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <Router>\n      <App />\n    </Router>\n    <ReactQueryDevtools initialIsOpen={false} />\n  </QueryClientProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}